{
    "title": "nomad2018-predict-transparent-conductors",
    "steps": [
        {
            "text": "<span class='prompt'>ml-master@ai4ai:~$</span> python ml_master.py --task nomad2018-predict-transparent-conductors --time-limit 12h",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting run \"nomad2018-predict-transparent-conductors\"",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing virtual root node.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing virtual root node.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing virtual root node.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 978f07f05e5b4e9989cc2fb704194787 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Drafting a new Node.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 978f07f05e5b4e9989cc2fb704194787 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 978f07f05e5b4e9989cc2fb704194787 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Drafting a new Node.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 978f07f05e5b4e9989cc2fb704194787 expected_child_count is 2.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 978f07f05e5b4e9989cc2fb704194787 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Drafting a new Node.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 978f07f05e5b4e9989cc2fb704194787 expected_child_count is 3.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Drafted new node 6b9d36c24c0a46ceb97fb306da887228",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search]Draft node 6b9d36c24c0a46ceb97fb306da887228 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 6b9d36c24c0a46ceb97fb306da887228",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 6b9d36c24c0a46ceb97fb306da887228 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 6b9d36c24c0a46ceb97fb306da887228 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 978f07f05e5b4e9989cc2fb704194787, the generated node is 6b9d36c24c0a46ceb97fb306da887228, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 6b9d36c24c0a46ceb97fb306da887228",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 0, current node.id is 6b9d36c24c0a46ceb97fb306da887228",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=2,edges=[(0, 1)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 4/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 6b9d36c24c0a46ceb97fb306da887228",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 6b9d36c24c0a46ceb97fb306da887228",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 6b9d36c24c0a46ceb97fb306da887228.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 6b9d36c24c0a46ceb97fb306da887228 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Drafted new node 92ea16803dc14d9bac86d91f4ca4f614",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search]Draft node 92ea16803dc14d9bac86d91f4ca4f614 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 92ea16803dc14d9bac86d91f4ca4f614",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 92ea16803dc14d9bac86d91f4ca4f614 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 92ea16803dc14d9bac86d91f4ca4f614 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 92ea16803dc14d9bac86d91f4ca4f614 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 978f07f05e5b4e9989cc2fb704194787, the generated node is 92ea16803dc14d9bac86d91f4ca4f614, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 92ea16803dc14d9bac86d91f4ca4f614",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 2, current node.id is 92ea16803dc14d9bac86d91f4ca4f614",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=3,edges=[(0, 1), (0, 2)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 5/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 92ea16803dc14d9bac86d91f4ca4f614",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 92ea16803dc14d9bac86d91f4ca4f614",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 92ea16803dc14d9bac86d91f4ca4f614.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 92ea16803dc14d9bac86d91f4ca4f614 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Drafted new node a7af7611cba548f68c4b859e9b02ed8c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search]Draft node a7af7611cba548f68c4b859e9b02ed8c is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node a7af7611cba548f68c4b859e9b02ed8c",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node a7af7611cba548f68c4b859e9b02ed8c is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node a7af7611cba548f68c4b859e9b02ed8c is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node a7af7611cba548f68c4b859e9b02ed8c is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 978f07f05e5b4e9989cc2fb704194787, the generated node is a7af7611cba548f68c4b859e9b02ed8c, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main a7af7611cba548f68c4b859e9b02ed8c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 3, current node.id is a7af7611cba548f68c4b859e9b02ed8c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=4,edges=[(0, 3), (0, 1), (0, 2)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 6/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: a7af7611cba548f68c4b859e9b02ed8c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: a7af7611cba548f68c4b859e9b02ed8c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node a7af7611cba548f68c4b859e9b02ed8c.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current a7af7611cba548f68c4b859e9b02ed8c expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 6b9d36c24c0a46ceb97fb306da887228 to create new node 726e8b780aab4f8f8223b3f741d37474",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 726e8b780aab4f8f8223b3f741d37474",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 92ea16803dc14d9bac86d91f4ca4f614 to create new node 7514f55e13b5427990651918b527bf88",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 726e8b780aab4f8f8223b3f741d37474 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 726e8b780aab4f8f8223b3f741d37474 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 726e8b780aab4f8f8223b3f741d37474 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 6b9d36c24c0a46ceb97fb306da887228, the generated node is 726e8b780aab4f8f8223b3f741d37474, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 726e8b780aab4f8f8223b3f741d37474",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 4, current node.id is 726e8b780aab4f8f8223b3f741d37474",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=5,edges=[(0, 3), (0, 1), (0, 2), (1, 4)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 7/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 726e8b780aab4f8f8223b3f741d37474",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 726e8b780aab4f8f8223b3f741d37474",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 726e8b780aab4f8f8223b3f741d37474.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 726e8b780aab4f8f8223b3f741d37474 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 7514f55e13b5427990651918b527bf88",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 7514f55e13b5427990651918b527bf88 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 7514f55e13b5427990651918b527bf88 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 7514f55e13b5427990651918b527bf88 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 92ea16803dc14d9bac86d91f4ca4f614, the generated node is 7514f55e13b5427990651918b527bf88, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 7514f55e13b5427990651918b527bf88",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 5, current node.id is 7514f55e13b5427990651918b527bf88",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=6,edges=[(0, 3), (0, 1), (0, 2), (1, 4), (2, 5)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 8/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 7514f55e13b5427990651918b527bf88",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 7514f55e13b5427990651918b527bf88",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 7514f55e13b5427990651918b527bf88.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 7514f55e13b5427990651918b527bf88 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 7514f55e13b5427990651918b527bf88 to create new node c6ea6b07968a401d9d2e43a1631041d6",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node c6ea6b07968a401d9d2e43a1631041d6",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node c6ea6b07968a401d9d2e43a1631041d6 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node c6ea6b07968a401d9d2e43a1631041d6 is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Successfully Debug the error in node 7514f55e13b5427990651918b527bf88.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: No local best node was found among the previous nodes; the current node c6ea6b07968a401d9d2e43a1631041d6 is assigned as the local best",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node c6ea6b07968a401d9d2e43a1631041d6 start backpropagating with reward 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ea16803dc14d9bac86d91f4ca4f614 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 7514f55e13b5427990651918b527bf88, the generated node is c6ea6b07968a401d9d2e43a1631041d6, the metric is 0.0611",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 is the best node so far",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node a7af7611cba548f68c4b859e9b02ed8c to create new node 367dcd5bc8ea41efb381c1a87851beea",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 367dcd5bc8ea41efb381c1a87851beea",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 726e8b780aab4f8f8223b3f741d37474 to create new node 2156290a5a4c4119b62ed50d1137a5b8",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 367dcd5bc8ea41efb381c1a87851beea is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 367dcd5bc8ea41efb381c1a87851beea is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 367dcd5bc8ea41efb381c1a87851beea is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node a7af7611cba548f68c4b859e9b02ed8c, the generated node is 367dcd5bc8ea41efb381c1a87851beea, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 367dcd5bc8ea41efb381c1a87851beea",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 6, current node.id is 367dcd5bc8ea41efb381c1a87851beea",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=8,edges=[(0, 3), (0, 1), (0, 2), (1, 4), (2, 5), (3, 7), (5, 6)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 10/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 8, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 367dcd5bc8ea41efb381c1a87851beea",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 367dcd5bc8ea41efb381c1a87851beea",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 367dcd5bc8ea41efb381c1a87851beea.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 367dcd5bc8ea41efb381c1a87851beea expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=8,edges=[(0, 3), (0, 1), (0, 2), (1, 4), (2, 5), (3, 7), (5, 6)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 10/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 978f07f05e5b4e9989cc2fb704194787 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Drafting a new Node.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 978f07f05e5b4e9989cc2fb704194787 expected_child_count is 4.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 2156290a5a4c4119b62ed50d1137a5b8",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 2156290a5a4c4119b62ed50d1137a5b8 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 2156290a5a4c4119b62ed50d1137a5b8 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 2156290a5a4c4119b62ed50d1137a5b8 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 726e8b780aab4f8f8223b3f741d37474, the generated node is 2156290a5a4c4119b62ed50d1137a5b8, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 2156290a5a4c4119b62ed50d1137a5b8",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 8, current node.id is 2156290a5a4c4119b62ed50d1137a5b8",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=9,edges=[(0, 3), (0, 1), (0, 2), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 11/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 2156290a5a4c4119b62ed50d1137a5b8",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 2156290a5a4c4119b62ed50d1137a5b8",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 2156290a5a4c4119b62ed50d1137a5b8.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 2156290a5a4c4119b62ed50d1137a5b8 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 367dcd5bc8ea41efb381c1a87851beea to create new node 66e321f5ec2f481f84f75e1134c5cc0e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 2156290a5a4c4119b62ed50d1137a5b8 to create new node 7bc531f5aedc41d0925efa14ea5d11ab",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 66e321f5ec2f481f84f75e1134c5cc0e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 7bc531f5aedc41d0925efa14ea5d11ab",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 66e321f5ec2f481f84f75e1134c5cc0e is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 66e321f5ec2f481f84f75e1134c5cc0e is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 66e321f5ec2f481f84f75e1134c5cc0e is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 367dcd5bc8ea41efb381c1a87851beea, the generated node is 66e321f5ec2f481f84f75e1134c5cc0e, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 66e321f5ec2f481f84f75e1134c5cc0e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 9, current node.id is 66e321f5ec2f481f84f75e1134c5cc0e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=10,edges=[(0, 3), (0, 1), (0, 2), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (7, 9)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 12/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 66e321f5ec2f481f84f75e1134c5cc0e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 66e321f5ec2f481f84f75e1134c5cc0e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 66e321f5ec2f481f84f75e1134c5cc0e.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 66e321f5ec2f481f84f75e1134c5cc0e expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 7bc531f5aedc41d0925efa14ea5d11ab is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 7bc531f5aedc41d0925efa14ea5d11ab is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 7bc531f5aedc41d0925efa14ea5d11ab is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 7bc531f5aedc41d0925efa14ea5d11ab start backpropagating with reward -1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 6b9d36c24c0a46ceb97fb306da887228 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 2156290a5a4c4119b62ed50d1137a5b8, the generated node is 7bc531f5aedc41d0925efa14ea5d11ab, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 10, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=11,edges=[(0, 3), (0, 1), (0, 2), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (7, 9), (8, 10)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 13/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 978f07f05e5b4e9989cc2fb704194787 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Drafting a new Node.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 978f07f05e5b4e9989cc2fb704194787 expected_child_count is 5.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 66e321f5ec2f481f84f75e1134c5cc0e to create new node 84a22dd364fe403382625610359f12f7",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 84a22dd364fe403382625610359f12f7",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 84a22dd364fe403382625610359f12f7 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 84a22dd364fe403382625610359f12f7 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 84a22dd364fe403382625610359f12f7 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 84a22dd364fe403382625610359f12f7 start backpropagating with reward -1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node a7af7611cba548f68c4b859e9b02ed8c is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 66e321f5ec2f481f84f75e1134c5cc0e, the generated node is 84a22dd364fe403382625610359f12f7, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 11, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=12,edges=[(0, 3), (0, 1), (0, 2), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (7, 9), (8, 10), (9, 11)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 14/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 0/3 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 1.414*(math.log(3) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 1.414*(math.log(3) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 92ea16803dc14d9bac86d91f4ca4f614 uct = 1.0/1 + 1.414*(math.log(3) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ea16803dc14d9bac86d91f4ca4f614 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 7514f55e13b5427990651918b527bf88 uct = 1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 uct = 1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: c6ea6b07968a401d9d2e43a1631041d6",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node c6ea6b07968a401d9d2e43a1631041d6.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current c6ea6b07968a401d9d2e43a1631041d6 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Drafted new node 4ce384e386cb43e686de1b926b24bb10",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search]Draft node 4ce384e386cb43e686de1b926b24bb10 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Drafted new node 92ce4198693b4f81a7e5fe23c9caeed6",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search]Draft node 92ce4198693b4f81a7e5fe23c9caeed6 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 92ce4198693b4f81a7e5fe23c9caeed6",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 4ce384e386cb43e686de1b926b24bb10",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 92ce4198693b4f81a7e5fe23c9caeed6 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 92ce4198693b4f81a7e5fe23c9caeed6 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 92ce4198693b4f81a7e5fe23c9caeed6 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 978f07f05e5b4e9989cc2fb704194787, the generated node is 92ce4198693b4f81a7e5fe23c9caeed6, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 92ce4198693b4f81a7e5fe23c9caeed6",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 4ce384e386cb43e686de1b926b24bb10 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 4ce384e386cb43e686de1b926b24bb10 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 4ce384e386cb43e686de1b926b24bb10 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 978f07f05e5b4e9989cc2fb704194787, the generated node is 4ce384e386cb43e686de1b926b24bb10, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 4ce384e386cb43e686de1b926b24bb10",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 12, current node.id is 4ce384e386cb43e686de1b926b24bb10",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=14,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (7, 9), (8, 10), (9, 11)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 16/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 14, current node.id is 92ce4198693b4f81a7e5fe23c9caeed6",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 4ce384e386cb43e686de1b926b24bb10",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 4ce384e386cb43e686de1b926b24bb10",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 4ce384e386cb43e686de1b926b24bb10.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 4ce384e386cb43e686de1b926b24bb10 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=14,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (7, 9), (8, 10), (9, 11)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 16/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 92ce4198693b4f81a7e5fe23c9caeed6",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 92ce4198693b4f81a7e5fe23c9caeed6",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 92ce4198693b4f81a7e5fe23c9caeed6.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 92ce4198693b4f81a7e5fe23c9caeed6 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 4ce384e386cb43e686de1b926b24bb10 to create new node ab69450171364e04af260715abbfeb4d",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node ab69450171364e04af260715abbfeb4d",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node ab69450171364e04af260715abbfeb4d is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node ab69450171364e04af260715abbfeb4d is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node ab69450171364e04af260715abbfeb4d is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 4ce384e386cb43e686de1b926b24bb10, the generated node is ab69450171364e04af260715abbfeb4d, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main ab69450171364e04af260715abbfeb4d",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 14, current node.id is ab69450171364e04af260715abbfeb4d",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=15,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (7, 9), (8, 10), (9, 11), (13, 14)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 17/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: ab69450171364e04af260715abbfeb4d",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: ab69450171364e04af260715abbfeb4d",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node ab69450171364e04af260715abbfeb4d.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current ab69450171364e04af260715abbfeb4d expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node ab69450171364e04af260715abbfeb4d to create new node 8957144e87db492288f62b74fb4df3a8",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 8957144e87db492288f62b74fb4df3a8",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 8957144e87db492288f62b74fb4df3a8 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 8957144e87db492288f62b74fb4df3a8 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 8957144e87db492288f62b74fb4df3a8 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node ab69450171364e04af260715abbfeb4d, the generated node is 8957144e87db492288f62b74fb4df3a8, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 8957144e87db492288f62b74fb4df3a8",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node c6ea6b07968a401d9d2e43a1631041d6 to create new node d695f6afb24841d4811fdffb207e6317",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node d695f6afb24841d4811fdffb207e6317",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node d695f6afb24841d4811fdffb207e6317 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node d695f6afb24841d4811fdffb207e6317 is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node c6ea6b07968a401d9d2e43a1631041d6, Node d695f6afb24841d4811fdffb207e6317 metric improvement (0.0) below threshold (0.0001), try one more time(1/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node c6ea6b07968a401d9d2e43a1631041d6, the generated node is d695f6afb24841d4811fdffb207e6317, the metric is 0.0611",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d695f6afb24841d4811fdffb207e6317 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main d695f6afb24841d4811fdffb207e6317",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 15, current node.id is d695f6afb24841d4811fdffb207e6317",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=17,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (13, 14), (14, 15)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 19/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 17, current node.id is 8957144e87db492288f62b74fb4df3a8",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: d695f6afb24841d4811fdffb207e6317",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: d695f6afb24841d4811fdffb207e6317",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node d695f6afb24841d4811fdffb207e6317.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current d695f6afb24841d4811fdffb207e6317 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=17,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (13, 14), (14, 15)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 19/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 8957144e87db492288f62b74fb4df3a8",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 8957144e87db492288f62b74fb4df3a8",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 8957144e87db492288f62b74fb4df3a8.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 8957144e87db492288f62b74fb4df3a8 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 92ce4198693b4f81a7e5fe23c9caeed6 to create new node 8ec237a1fa55423bbbedf7c5c7cb6957",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 8ec237a1fa55423bbbedf7c5c7cb6957",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 8ec237a1fa55423bbbedf7c5c7cb6957 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 8ec237a1fa55423bbbedf7c5c7cb6957 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 8ec237a1fa55423bbbedf7c5c7cb6957 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 92ce4198693b4f81a7e5fe23c9caeed6, the generated node is 8ec237a1fa55423bbbedf7c5c7cb6957, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 8ec237a1fa55423bbbedf7c5c7cb6957",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 17, current node.id is 8ec237a1fa55423bbbedf7c5c7cb6957",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=18,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 20/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 8ec237a1fa55423bbbedf7c5c7cb6957",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 8ec237a1fa55423bbbedf7c5c7cb6957",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 8ec237a1fa55423bbbedf7c5c7cb6957.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 8ec237a1fa55423bbbedf7c5c7cb6957 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 8957144e87db492288f62b74fb4df3a8 to create new node d079a831e4fa4091bdbc219e653c3687",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node d079a831e4fa4091bdbc219e653c3687",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node d079a831e4fa4091bdbc219e653c3687 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node d079a831e4fa4091bdbc219e653c3687 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node d079a831e4fa4091bdbc219e653c3687 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node d079a831e4fa4091bdbc219e653c3687 start backpropagating with reward -1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 8957144e87db492288f62b74fb4df3a8, the generated node is d079a831e4fa4091bdbc219e653c3687, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node d695f6afb24841d4811fdffb207e6317 to create new node 6fd5d07c609f44d1b6fb1274a247647f",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 6fd5d07c609f44d1b6fb1274a247647f",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 6fd5d07c609f44d1b6fb1274a247647f is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 6fd5d07c609f44d1b6fb1274a247647f is 0.0616.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node c6ea6b07968a401d9d2e43a1631041d6, Node 6fd5d07c609f44d1b6fb1274a247647f metric improvement (-0.0005000000000000004) below threshold (0.0001), try one more time(2/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node d695f6afb24841d4811fdffb207e6317, the generated node is 6fd5d07c609f44d1b6fb1274a247647f, the metric is 0.0616",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6fd5d07c609f44d1b6fb1274a247647f is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 6fd5d07c609f44d1b6fb1274a247647f",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 18, current node.id is 6fd5d07c609f44d1b6fb1274a247647f",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=20,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 22/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 20, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 6fd5d07c609f44d1b6fb1274a247647f",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 6fd5d07c609f44d1b6fb1274a247647f",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 6fd5d07c609f44d1b6fb1274a247647f.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 6fd5d07c609f44d1b6fb1274a247647f expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=20,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 22/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 2/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 4ce384e386cb43e686de1b926b24bb10 uct = -1.0/1 + 1.414*(math.log(4) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 1.414*(math.log(4) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 1.414*(math.log(4) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node ab69450171364e04af260715abbfeb4d uct = -1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8957144e87db492288f62b74fb4df3a8 uct = -1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d079a831e4fa4091bdbc219e653c3687 uct = -1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d079a831e4fa4091bdbc219e653c3687 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: d079a831e4fa4091bdbc219e653c3687",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node d079a831e4fa4091bdbc219e653c3687.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current d079a831e4fa4091bdbc219e653c3687 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 8ec237a1fa55423bbbedf7c5c7cb6957 to create new node 71d595830bc94110bf8e2fbd3a3bba8e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 71d595830bc94110bf8e2fbd3a3bba8e",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 71d595830bc94110bf8e2fbd3a3bba8e is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 71d595830bc94110bf8e2fbd3a3bba8e is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 71d595830bc94110bf8e2fbd3a3bba8e is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 8ec237a1fa55423bbbedf7c5c7cb6957, the generated node is 71d595830bc94110bf8e2fbd3a3bba8e, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 71d595830bc94110bf8e2fbd3a3bba8e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 20, current node.id is 71d595830bc94110bf8e2fbd3a3bba8e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=21,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 23/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 71d595830bc94110bf8e2fbd3a3bba8e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 71d595830bc94110bf8e2fbd3a3bba8e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 71d595830bc94110bf8e2fbd3a3bba8e.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 71d595830bc94110bf8e2fbd3a3bba8e expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node d079a831e4fa4091bdbc219e653c3687 to create new node 5202ca88025a4edea928d42ef8b297ff",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 71d595830bc94110bf8e2fbd3a3bba8e to create new node 2682905515a24bf9b5aeb9186d49588b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 2682905515a24bf9b5aeb9186d49588b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 5202ca88025a4edea928d42ef8b297ff",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 5202ca88025a4edea928d42ef8b297ff is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 5202ca88025a4edea928d42ef8b297ff is 0.0626.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Successfully Debug the error in node d079a831e4fa4091bdbc219e653c3687.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: No local best node was found among the previous nodes; the current node 5202ca88025a4edea928d42ef8b297ff is assigned as the local best",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 5202ca88025a4edea928d42ef8b297ff start backpropagating with reward 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node d079a831e4fa4091bdbc219e653c3687, the generated node is 5202ca88025a4edea928d42ef8b297ff, the metric is 0.0626",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5202ca88025a4edea928d42ef8b297ff is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 2682905515a24bf9b5aeb9186d49588b is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 2682905515a24bf9b5aeb9186d49588b is 0.0791.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Successfully Debug the error in node 71d595830bc94110bf8e2fbd3a3bba8e.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: No local best node was found among the previous nodes; the current node 2682905515a24bf9b5aeb9186d49588b is assigned as the local best",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 2682905515a24bf9b5aeb9186d49588b start backpropagating with reward 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ce4198693b4f81a7e5fe23c9caeed6 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 71d595830bc94110bf8e2fbd3a3bba8e, the generated node is 2682905515a24bf9b5aeb9186d49588b, the metric is 0.0791",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2682905515a24bf9b5aeb9186d49588b is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 6fd5d07c609f44d1b6fb1274a247647f to create new node 15fa67e2f4e7410c8f598827ecdcb321",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 15fa67e2f4e7410c8f598827ecdcb321",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 15fa67e2f4e7410c8f598827ecdcb321 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 15fa67e2f4e7410c8f598827ecdcb321 is 0.0616.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node c6ea6b07968a401d9d2e43a1631041d6, Node 15fa67e2f4e7410c8f598827ecdcb321 metric improvement (-0.0005000000000000004) below threshold (0.0001), try one more time(3/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 6fd5d07c609f44d1b6fb1274a247647f, the generated node is 15fa67e2f4e7410c8f598827ecdcb321, the metric is 0.0616",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 15fa67e2f4e7410c8f598827ecdcb321 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 15fa67e2f4e7410c8f598827ecdcb321",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 21, current node.id is 15fa67e2f4e7410c8f598827ecdcb321",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=24,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 26/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 24, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 15fa67e2f4e7410c8f598827ecdcb321",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 15fa67e2f4e7410c8f598827ecdcb321",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 15fa67e2f4e7410c8f598827ecdcb321.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 15fa67e2f4e7410c8f598827ecdcb321 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=24,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 26/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 24, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 1/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 4ce384e386cb43e686de1b926b24bb10 uct = 0.0/2 + 1.414*(math.log(6) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 1.414*(math.log(6) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 1.414*(math.log(6) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 92ce4198693b4f81a7e5fe23c9caeed6 uct = 1.0/1 + 1.414*(math.log(6) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ce4198693b4f81a7e5fe23c9caeed6 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8ec237a1fa55423bbbedf7c5c7cb6957 uct = 1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 71d595830bc94110bf8e2fbd3a3bba8e uct = 1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2682905515a24bf9b5aeb9186d49588b uct = 1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2682905515a24bf9b5aeb9186d49588b is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 2682905515a24bf9b5aeb9186d49588b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 2682905515a24bf9b5aeb9186d49588b.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 2682905515a24bf9b5aeb9186d49588b expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=24,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 26/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 2/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 4ce384e386cb43e686de1b926b24bb10 uct = 0.0/2 + 1.414*(math.log(6) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 1.414*(math.log(6) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 1.414*(math.log(6) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node ab69450171364e04af260715abbfeb4d uct = 0.0/2 + 1.414*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8957144e87db492288f62b74fb4df3a8 uct = 0.0/2 + 1.414*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d079a831e4fa4091bdbc219e653c3687 uct = 0.0/2 + 1.414*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5202ca88025a4edea928d42ef8b297ff uct = 1.0/1 + 1.414*(math.log(2) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5202ca88025a4edea928d42ef8b297ff is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 5202ca88025a4edea928d42ef8b297ff",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 5202ca88025a4edea928d42ef8b297ff.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 5202ca88025a4edea928d42ef8b297ff expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 2682905515a24bf9b5aeb9186d49588b to create new node dc76c9d762a144a38b942a56579c72f1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node dc76c9d762a144a38b942a56579c72f1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node dc76c9d762a144a38b942a56579c72f1 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node dc76c9d762a144a38b942a56579c72f1 is 0.2424.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 2682905515a24bf9b5aeb9186d49588b, Node dc76c9d762a144a38b942a56579c72f1 metric improvement (-0.1633) below threshold (0.0001), try one more time(1/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 2682905515a24bf9b5aeb9186d49588b, the generated node is dc76c9d762a144a38b942a56579c72f1, the metric is 0.2424",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node dc76c9d762a144a38b942a56579c72f1 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main dc76c9d762a144a38b942a56579c72f1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 5202ca88025a4edea928d42ef8b297ff to create new node 0243f2d6f981436f9d30439cd72f3ace",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 0243f2d6f981436f9d30439cd72f3ace",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 0243f2d6f981436f9d30439cd72f3ace is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 0243f2d6f981436f9d30439cd72f3ace is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 0243f2d6f981436f9d30439cd72f3ace is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 5202ca88025a4edea928d42ef8b297ff, the generated node is 0243f2d6f981436f9d30439cd72f3ace, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0611.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 0243f2d6f981436f9d30439cd72f3ace",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 15fa67e2f4e7410c8f598827ecdcb321 to create new node 6cf08f241110490bae9955b1d7800ee1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 6cf08f241110490bae9955b1d7800ee1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 6cf08f241110490bae9955b1d7800ee1 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 6cf08f241110490bae9955b1d7800ee1 is 0.0609.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Compared to Node c6ea6b07968a401d9d2e43a1631041d6, Node 6cf08f241110490bae9955b1d7800ee1 metric improvement (0.0001999999999999988) above threshold (0.0001), continue improving.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 15fa67e2f4e7410c8f598827ecdcb321, the generated node is 6cf08f241110490bae9955b1d7800ee1, the metric is 0.0609",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6cf08f241110490bae9955b1d7800ee1 is the best node so far",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0609.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 6cf08f241110490bae9955b1d7800ee1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 24, current node.id is 6cf08f241110490bae9955b1d7800ee1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=27,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 29/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 27, current node.id is 0243f2d6f981436f9d30439cd72f3ace",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 6cf08f241110490bae9955b1d7800ee1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 6cf08f241110490bae9955b1d7800ee1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 6cf08f241110490bae9955b1d7800ee1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 6cf08f241110490bae9955b1d7800ee1 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=27,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 29/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 27, current node.id is dc76c9d762a144a38b942a56579c72f1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 0243f2d6f981436f9d30439cd72f3ace",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 0243f2d6f981436f9d30439cd72f3ace",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 0243f2d6f981436f9d30439cd72f3ace.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 0243f2d6f981436f9d30439cd72f3ace expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=27,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 29/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: dc76c9d762a144a38b942a56579c72f1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: dc76c9d762a144a38b942a56579c72f1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node dc76c9d762a144a38b942a56579c72f1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current dc76c9d762a144a38b942a56579c72f1 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 0243f2d6f981436f9d30439cd72f3ace to create new node 2e1442a24ea945ffb4f5436fa38bd066",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node dc76c9d762a144a38b942a56579c72f1 to create new node b9fb8d4490a04c40acef643e243eab9e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 6cf08f241110490bae9955b1d7800ee1 to create new node c2abdc6756bc40debfb7c453198f954a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 2",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是2",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:2使用的cpu为{32, 33, 34, 35, 24, 25, 26, 27, 28, 29, 30, 31}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node b9fb8d4490a04c40acef643e243eab9e",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node b9fb8d4490a04c40acef643e243eab9e is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node b9fb8d4490a04c40acef643e243eab9e is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node b9fb8d4490a04c40acef643e243eab9e is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node dc76c9d762a144a38b942a56579c72f1, the generated node is b9fb8d4490a04c40acef643e243eab9e, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0609.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main b9fb8d4490a04c40acef643e243eab9e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 2e1442a24ea945ffb4f5436fa38bd066",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 2e1442a24ea945ffb4f5436fa38bd066 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 2e1442a24ea945ffb4f5436fa38bd066 is 0.0617.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Successfully Debug the error in node 0243f2d6f981436f9d30439cd72f3ace.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Compared to Node 5202ca88025a4edea928d42ef8b297ff, Node 2e1442a24ea945ffb4f5436fa38bd066 metric improvement (0.000900000000000005) above threshold (0.0001), continue improving.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 2e1442a24ea945ffb4f5436fa38bd066 start backpropagating with reward 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 0243f2d6f981436f9d30439cd72f3ace, the generated node is 2e1442a24ea945ffb4f5436fa38bd066, the metric is 0.0617",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2e1442a24ea945ffb4f5436fa38bd066 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6cf08f241110490bae9955b1d7800ee1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0609.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node c2abdc6756bc40debfb7c453198f954a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node c2abdc6756bc40debfb7c453198f954a is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node c2abdc6756bc40debfb7c453198f954a is 0.0604.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Compared to Node 6cf08f241110490bae9955b1d7800ee1, Node c2abdc6756bc40debfb7c453198f954a metric improvement (0.0005000000000000004) above threshold (0.0001), continue improving.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 6cf08f241110490bae9955b1d7800ee1, the generated node is c2abdc6756bc40debfb7c453198f954a, the metric is 0.0604",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c2abdc6756bc40debfb7c453198f954a is the best node so far",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0604.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main c2abdc6756bc40debfb7c453198f954a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 27, current node.id is c2abdc6756bc40debfb7c453198f954a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=30,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26), (24, 27), (25, 28), (26, 29)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 32/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 30, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: c2abdc6756bc40debfb7c453198f954a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: c2abdc6756bc40debfb7c453198f954a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node c2abdc6756bc40debfb7c453198f954a.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current c2abdc6756bc40debfb7c453198f954a expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=30,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26), (24, 27), (25, 28), (26, 29)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 32/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 30, current node.id is b9fb8d4490a04c40acef643e243eab9e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 2/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 4ce384e386cb43e686de1b926b24bb10 uct = 1.0/3 + 1.414*(math.log(7) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 1.414*(math.log(7) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 1.414*(math.log(7) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node ab69450171364e04af260715abbfeb4d uct = 1.0/3 + 1.414*(math.log(3) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8957144e87db492288f62b74fb4df3a8 uct = 1.0/3 + 1.414*(math.log(3) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d079a831e4fa4091bdbc219e653c3687 uct = 1.0/3 + 1.414*(math.log(3) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5202ca88025a4edea928d42ef8b297ff uct = 2.0/2 + 1.414*(math.log(3) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0243f2d6f981436f9d30439cd72f3ace uct = 1.0/1 + 1.414*(math.log(2) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2e1442a24ea945ffb4f5436fa38bd066 uct = 1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2e1442a24ea945ffb4f5436fa38bd066 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 2e1442a24ea945ffb4f5436fa38bd066",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 2e1442a24ea945ffb4f5436fa38bd066.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 2e1442a24ea945ffb4f5436fa38bd066 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=30,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26), (24, 27), (25, 28), (26, 29)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 32/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: b9fb8d4490a04c40acef643e243eab9e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: b9fb8d4490a04c40acef643e243eab9e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node b9fb8d4490a04c40acef643e243eab9e.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current b9fb8d4490a04c40acef643e243eab9e expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 2e1442a24ea945ffb4f5436fa38bd066 to create new node 9315de56150745548d77399b670ec829",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 9315de56150745548d77399b670ec829",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 9315de56150745548d77399b670ec829 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 9315de56150745548d77399b670ec829 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 9315de56150745548d77399b670ec829 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 2e1442a24ea945ffb4f5436fa38bd066, the generated node is 9315de56150745548d77399b670ec829, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0604.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 9315de56150745548d77399b670ec829",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node b9fb8d4490a04c40acef643e243eab9e to create new node 5689c4876d0544f2b6846dbb392e76e7",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 5689c4876d0544f2b6846dbb392e76e7",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 5689c4876d0544f2b6846dbb392e76e7 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 5689c4876d0544f2b6846dbb392e76e7 is 0.0825.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Successfully Debug the error in node b9fb8d4490a04c40acef643e243eab9e.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 2682905515a24bf9b5aeb9186d49588b, Node 5689c4876d0544f2b6846dbb392e76e7 metric improvement (-0.0034000000000000002) below threshold (0.0001), try one more time(2/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 5689c4876d0544f2b6846dbb392e76e7 start backpropagating with reward 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ce4198693b4f81a7e5fe23c9caeed6 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node b9fb8d4490a04c40acef643e243eab9e, the generated node is 5689c4876d0544f2b6846dbb392e76e7, the metric is 0.0825",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5689c4876d0544f2b6846dbb392e76e7 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c2abdc6756bc40debfb7c453198f954a is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0604.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node c2abdc6756bc40debfb7c453198f954a to create new node 2a36d0bc82164250b5fe573b97080f4e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 2a36d0bc82164250b5fe573b97080f4e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 2a36d0bc82164250b5fe573b97080f4e is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 2a36d0bc82164250b5fe573b97080f4e is 0.0617.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node c2abdc6756bc40debfb7c453198f954a, Node 2a36d0bc82164250b5fe573b97080f4e metric improvement (-0.0012999999999999956) below threshold (0.0001), try one more time(1/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node c2abdc6756bc40debfb7c453198f954a, the generated node is 2a36d0bc82164250b5fe573b97080f4e, the metric is 0.0617",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2a36d0bc82164250b5fe573b97080f4e is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c2abdc6756bc40debfb7c453198f954a is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0604.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 2a36d0bc82164250b5fe573b97080f4e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 30, current node.id is 2a36d0bc82164250b5fe573b97080f4e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=33,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26), (24, 27), (25, 28), (26, 29), (27, 31), (28, 30), (29, 32)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 35/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 33, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 2a36d0bc82164250b5fe573b97080f4e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 2a36d0bc82164250b5fe573b97080f4e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 2a36d0bc82164250b5fe573b97080f4e.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 2a36d0bc82164250b5fe573b97080f4e expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=33,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26), (24, 27), (25, 28), (26, 29), (27, 31), (28, 30), (29, 32)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 35/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 33, current node.id is 9315de56150745548d77399b670ec829",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 2/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 1.414*(math.log(8) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 1.414*(math.log(8) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 92ce4198693b4f81a7e5fe23c9caeed6 uct = 2.0/2 + 1.414*(math.log(8) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ce4198693b4f81a7e5fe23c9caeed6 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8ec237a1fa55423bbbedf7c5c7cb6957 uct = 2.0/2 + 1.414*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 71d595830bc94110bf8e2fbd3a3bba8e uct = 2.0/2 + 1.414*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2682905515a24bf9b5aeb9186d49588b uct = 2.0/2 + 1.414*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node dc76c9d762a144a38b942a56579c72f1 uct = 1.0/1 + 1.414*(math.log(2) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node b9fb8d4490a04c40acef643e243eab9e uct = 1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5689c4876d0544f2b6846dbb392e76e7 uct = 1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5689c4876d0544f2b6846dbb392e76e7 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 5689c4876d0544f2b6846dbb392e76e7",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 5689c4876d0544f2b6846dbb392e76e7.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 5689c4876d0544f2b6846dbb392e76e7 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=33,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26), (24, 27), (25, 28), (26, 29), (27, 31), (28, 30), (29, 32)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 35/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 9315de56150745548d77399b670ec829",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 9315de56150745548d77399b670ec829",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 9315de56150745548d77399b670ec829.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 9315de56150745548d77399b670ec829 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 9315de56150745548d77399b670ec829 to create new node 79e336263509411ab28d1c285e9cbad3",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 2a36d0bc82164250b5fe573b97080f4e to create new node e08e60fab9fa4b258a1ccd678407aa89",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 79e336263509411ab28d1c285e9cbad3",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 79e336263509411ab28d1c285e9cbad3 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 79e336263509411ab28d1c285e9cbad3 is 0.0613.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Successfully Debug the error in node 9315de56150745548d77399b670ec829.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Compared to Node 2e1442a24ea945ffb4f5436fa38bd066, Node 79e336263509411ab28d1c285e9cbad3 metric improvement (0.0003999999999999976) above threshold (0.0001), continue improving.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 79e336263509411ab28d1c285e9cbad3 start backpropagating with reward 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 9315de56150745548d77399b670ec829, the generated node is 79e336263509411ab28d1c285e9cbad3, the metric is 0.0613",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 79e336263509411ab28d1c285e9cbad3 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c2abdc6756bc40debfb7c453198f954a is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0604.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node e08e60fab9fa4b258a1ccd678407aa89",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node e08e60fab9fa4b258a1ccd678407aa89 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node e08e60fab9fa4b258a1ccd678407aa89 is 0.0749.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node c2abdc6756bc40debfb7c453198f954a, Node e08e60fab9fa4b258a1ccd678407aa89 metric improvement (-0.014499999999999992) below threshold (0.0001), try one more time(2/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 2a36d0bc82164250b5fe573b97080f4e, the generated node is e08e60fab9fa4b258a1ccd678407aa89, the metric is 0.0749",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node e08e60fab9fa4b258a1ccd678407aa89 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c2abdc6756bc40debfb7c453198f954a is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0604.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main e08e60fab9fa4b258a1ccd678407aa89",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 33, current node.id is e08e60fab9fa4b258a1ccd678407aa89",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=35,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26), (24, 27), (25, 28), (26, 29), (27, 31), (28, 30), (29, 32), (30, 33), (32, 34)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 37/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 35, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: e08e60fab9fa4b258a1ccd678407aa89",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: e08e60fab9fa4b258a1ccd678407aa89",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node e08e60fab9fa4b258a1ccd678407aa89.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current e08e60fab9fa4b258a1ccd678407aa89 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=35,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26), (24, 27), (25, 28), (26, 29), (27, 31), (28, 30), (29, 32), (30, 33), (32, 34)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 37/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 2/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 4ce384e386cb43e686de1b926b24bb10 uct = 2.0/4 + 1.414*(math.log(9) / 4) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 1.414*(math.log(9) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 1.414*(math.log(9) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node ab69450171364e04af260715abbfeb4d uct = 2.0/4 + 1.414*(math.log(4) / 4) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8957144e87db492288f62b74fb4df3a8 uct = 2.0/4 + 1.414*(math.log(4) / 4) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d079a831e4fa4091bdbc219e653c3687 uct = 2.0/4 + 1.414*(math.log(4) / 4) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5202ca88025a4edea928d42ef8b297ff uct = 3.0/3 + 1.414*(math.log(4) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0243f2d6f981436f9d30439cd72f3ace uct = 2.0/2 + 1.414*(math.log(3) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2e1442a24ea945ffb4f5436fa38bd066 uct = 2.0/2 + 1.414*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9315de56150745548d77399b670ec829 uct = 1.0/1 + 1.414*(math.log(2) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 79e336263509411ab28d1c285e9cbad3 uct = 1.0/1 + 1.414*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 79e336263509411ab28d1c285e9cbad3 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 79e336263509411ab28d1c285e9cbad3",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 79e336263509411ab28d1c285e9cbad3.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 79e336263509411ab28d1c285e9cbad3 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 5689c4876d0544f2b6846dbb392e76e7 to create new node af3e8e0d36094ee29e66aa04188c7240",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node af3e8e0d36094ee29e66aa04188c7240",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node af3e8e0d36094ee29e66aa04188c7240 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node af3e8e0d36094ee29e66aa04188c7240 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node af3e8e0d36094ee29e66aa04188c7240 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 5689c4876d0544f2b6846dbb392e76e7, the generated node is af3e8e0d36094ee29e66aa04188c7240, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0604.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main af3e8e0d36094ee29e66aa04188c7240",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 35, current node.id is af3e8e0d36094ee29e66aa04188c7240",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=36,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (17, 20), (18, 21), (19, 23), (20, 22), (21, 25), (22, 24), (23, 26), (24, 27), (25, 28), (26, 29), (27, 31), (28, 30), (29, 32), (30, 33), (31, 35), (32, 34)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 38/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: af3e8e0d36094ee29e66aa04188c7240",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: af3e8e0d36094ee29e66aa04188c7240",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node af3e8e0d36094ee29e66aa04188c7240.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current af3e8e0d36094ee29e66aa04188c7240 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 79e336263509411ab28d1c285e9cbad3 to create new node d761c8c404e44ac8846afdb4af848e01",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node d761c8c404e44ac8846afdb4af848e01",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node d761c8c404e44ac8846afdb4af848e01 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node d761c8c404e44ac8846afdb4af848e01 is 0.0608.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Compared to Node 79e336263509411ab28d1c285e9cbad3, Node d761c8c404e44ac8846afdb4af848e01 metric improvement (0.0005000000000000004) above threshold (0.0001), continue improving.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 79e336263509411ab28d1c285e9cbad3, the generated node is d761c8c404e44ac8846afdb4af848e01, the metric is 0.0608",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d761c8c404e44ac8846afdb4af848e01 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node d3665d3100b34a5cbe4a26d2ec46097b to create new node 304cc1c110eb4c3e9d0870c14489df74",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 304cc1c110eb4c3e9d0870c14489df74",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 304cc1c110eb4c3e9d0870c14489df74 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 304cc1c110eb4c3e9d0870c14489df74 is 0.0655.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Compared to Node d3665d3100b34a5cbe4a26d2ec46097b, Node 304cc1c110eb4c3e9d0870c14489df74 metric improvement (0.0006999999999999923) above threshold (0.0001), continue improving.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node d3665d3100b34a5cbe4a26d2ec46097b, the generated node is 304cc1c110eb4c3e9d0870c14489df74, the metric is 0.0655",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 304cc1c110eb4c3e9d0870c14489df74 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 304cc1c110eb4c3e9d0870c14489df74",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 468, current node.id is 304cc1c110eb4c3e9d0870c14489df74",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=471,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 473/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 471, current node.id is e19f809ca7614a1998bcf4ae26728935",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 304cc1c110eb4c3e9d0870c14489df74",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 304cc1c110eb4c3e9d0870c14489df74",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 304cc1c110eb4c3e9d0870c14489df74.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 304cc1c110eb4c3e9d0870c14489df74 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=471,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 473/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 471, current node.id is bdce58dc22254cf6a4c43197de24f23c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: e19f809ca7614a1998bcf4ae26728935",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: e19f809ca7614a1998bcf4ae26728935",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node e19f809ca7614a1998bcf4ae26728935.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current e19f809ca7614a1998bcf4ae26728935 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=471,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 473/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: bdce58dc22254cf6a4c43197de24f23c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: bdce58dc22254cf6a4c43197de24f23c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node bdce58dc22254cf6a4c43197de24f23c.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current bdce58dc22254cf6a4c43197de24f23c expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node bdce58dc22254cf6a4c43197de24f23c to create new node 0b70259cdfdb46cc93215f72c89bc9ae",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 304cc1c110eb4c3e9d0870c14489df74 to create new node a860bc77d4784a5ba34397e732b80095",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 0b70259cdfdb46cc93215f72c89bc9ae",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 0b70259cdfdb46cc93215f72c89bc9ae is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 0b70259cdfdb46cc93215f72c89bc9ae is 0.0812.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 90516d22e1974c728bab106e14aa234c, Node 0b70259cdfdb46cc93215f72c89bc9ae metric improvement (-0.021399999999999995) below threshold (0.0001), try one more time(2/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node bdce58dc22254cf6a4c43197de24f23c, the generated node is 0b70259cdfdb46cc93215f72c89bc9ae, the metric is 0.0812",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0b70259cdfdb46cc93215f72c89bc9ae is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 0b70259cdfdb46cc93215f72c89bc9ae",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node a860bc77d4784a5ba34397e732b80095",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node a860bc77d4784a5ba34397e732b80095 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node a860bc77d4784a5ba34397e732b80095 is 0.0662.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 304cc1c110eb4c3e9d0870c14489df74, Node a860bc77d4784a5ba34397e732b80095 metric improvement (-0.0006999999999999923) below threshold (0.0001), try one more time(1/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 304cc1c110eb4c3e9d0870c14489df74, the generated node is a860bc77d4784a5ba34397e732b80095, the metric is 0.0662",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a860bc77d4784a5ba34397e732b80095 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main a860bc77d4784a5ba34397e732b80095",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 471, current node.id is a860bc77d4784a5ba34397e732b80095",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=473,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (469, 471), (470, 472)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 475/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 473, current node.id is 0b70259cdfdb46cc93215f72c89bc9ae",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: a860bc77d4784a5ba34397e732b80095",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: a860bc77d4784a5ba34397e732b80095",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node a860bc77d4784a5ba34397e732b80095.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current a860bc77d4784a5ba34397e732b80095 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=473,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (469, 471), (470, 472)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 475/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 0b70259cdfdb46cc93215f72c89bc9ae",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 0b70259cdfdb46cc93215f72c89bc9ae",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 0b70259cdfdb46cc93215f72c89bc9ae.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 0b70259cdfdb46cc93215f72c89bc9ae expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node e19f809ca7614a1998bcf4ae26728935 to create new node 4e8c3851d4434c13b4e96f27f89aa537",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 4e8c3851d4434c13b4e96f27f89aa537",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 4e8c3851d4434c13b4e96f27f89aa537 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 4e8c3851d4434c13b4e96f27f89aa537 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 4e8c3851d4434c13b4e96f27f89aa537 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node e19f809ca7614a1998bcf4ae26728935, the generated node is 4e8c3851d4434c13b4e96f27f89aa537, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 4e8c3851d4434c13b4e96f27f89aa537",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 473, current node.id is 4e8c3851d4434c13b4e96f27f89aa537",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=474,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 476/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 4e8c3851d4434c13b4e96f27f89aa537",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 4e8c3851d4434c13b4e96f27f89aa537",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 4e8c3851d4434c13b4e96f27f89aa537.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 4e8c3851d4434c13b4e96f27f89aa537 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 4e8c3851d4434c13b4e96f27f89aa537 to create new node 67cdb83f517a4e4eaa3d2163a8c2fec1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 67cdb83f517a4e4eaa3d2163a8c2fec1",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 67cdb83f517a4e4eaa3d2163a8c2fec1 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 67cdb83f517a4e4eaa3d2163a8c2fec1 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 67cdb83f517a4e4eaa3d2163a8c2fec1 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 67cdb83f517a4e4eaa3d2163a8c2fec1 start backpropagating with reward -1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ea16803dc14d9bac86d91f4ca4f614 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 4e8c3851d4434c13b4e96f27f89aa537, the generated node is 67cdb83f517a4e4eaa3d2163a8c2fec1, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 0b70259cdfdb46cc93215f72c89bc9ae to create new node a00ed717404d4a27be17f8a913580962",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node a860bc77d4784a5ba34397e732b80095 to create new node e00f5af525bd4b2d899fb9a773da87c4",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node a00ed717404d4a27be17f8a913580962",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node a00ed717404d4a27be17f8a913580962 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node a00ed717404d4a27be17f8a913580962 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node a00ed717404d4a27be17f8a913580962 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 0b70259cdfdb46cc93215f72c89bc9ae, the generated node is a00ed717404d4a27be17f8a913580962, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main a00ed717404d4a27be17f8a913580962",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node e00f5af525bd4b2d899fb9a773da87c4",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node e00f5af525bd4b2d899fb9a773da87c4 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node e00f5af525bd4b2d899fb9a773da87c4 is 0.0659.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 304cc1c110eb4c3e9d0870c14489df74, Node e00f5af525bd4b2d899fb9a773da87c4 metric improvement (-0.0003999999999999976) below threshold (0.0001), try one more time(2/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node a860bc77d4784a5ba34397e732b80095, the generated node is e00f5af525bd4b2d899fb9a773da87c4, the metric is 0.0659",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node e00f5af525bd4b2d899fb9a773da87c4 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main e00f5af525bd4b2d899fb9a773da87c4",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 474, current node.id is e00f5af525bd4b2d899fb9a773da87c4",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=477,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 479/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 477, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: e00f5af525bd4b2d899fb9a773da87c4",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: e00f5af525bd4b2d899fb9a773da87c4",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node e00f5af525bd4b2d899fb9a773da87c4.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current e00f5af525bd4b2d899fb9a773da87c4 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=477,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 479/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 477, current node.id is a00ed717404d4a27be17f8a913580962",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 2/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 0.5*(math.log(109) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 0.5*(math.log(109) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 92ea16803dc14d9bac86d91f4ca4f614 uct = 9.0/31 + 0.5*(math.log(109) / 31) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ea16803dc14d9bac86d91f4ca4f614 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 7514f55e13b5427990651918b527bf88 uct = 9.0/31 + 0.5*(math.log(31) / 31) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 uct = 9.0/31 + 0.5*(math.log(31) / 31) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a82d27faf2a8456db20d0dc1b0adfb6b uct = -1.0/3 + 0.5*(math.log(31) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node e53b038673df4b829d568bf83e6b34c2 uct = -1.0/1 + 0.5*(math.log(31) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d695f6afb24841d4811fdffb207e6317 uct = 10.0/26 + 0.5*(math.log(31) / 26) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6fd5d07c609f44d1b6fb1274a247647f uct = 0.0/2 + 0.5*(math.log(26) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0ed856925538426fbca143ecf8ee2d75 uct = 11.0/23 + 0.5*(math.log(26) / 23) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8a1410bb6589434a9abd79ff2614d46d uct = -1.0/1 + 0.5*(math.log(26) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 7773048fbca44492876fbc2826c67c97 uct = -1.0/1 + 0.5*(math.log(23) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node cd340e640d8748aea85837ed85571170 uct = 12.0/20 + 0.5*(math.log(23) / 20) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 079df53a093a4777864a6bcc99e77272 uct = 0.0/2 + 0.5*(math.log(23) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node df39690b99a64d24a0b4786e695d794a uct = 4.0/6 + 0.5*(math.log(20) / 6) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2e9293354af246d49b8a4d1f334d10f7 uct = 5.0/9 + 0.5*(math.log(20) / 9) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8b3e8e4c7c33431fb70bc3cb0ffcfb34 uct = 3.0/5 + 0.5*(math.log(20) / 5) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node df39690b99a64d24a0b4786e695d794a is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: df39690b99a64d24a0b4786e695d794a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node df39690b99a64d24a0b4786e695d794a.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current df39690b99a64d24a0b4786e695d794a expected_child_count is 3.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=477,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 479/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: a00ed717404d4a27be17f8a913580962",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: a00ed717404d4a27be17f8a913580962",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node a00ed717404d4a27be17f8a913580962.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current a00ed717404d4a27be17f8a913580962 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node df39690b99a64d24a0b4786e695d794a to create new node 013f809980d548d8b888c7215450ab8a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 013f809980d548d8b888c7215450ab8a",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 013f809980d548d8b888c7215450ab8a is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 013f809980d548d8b888c7215450ab8a is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 013f809980d548d8b888c7215450ab8a is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node df39690b99a64d24a0b4786e695d794a, the generated node is 013f809980d548d8b888c7215450ab8a, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 013f809980d548d8b888c7215450ab8a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node e00f5af525bd4b2d899fb9a773da87c4 to create new node 729ec5da0e09497da386e44303abe831",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 729ec5da0e09497da386e44303abe831",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 729ec5da0e09497da386e44303abe831 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 729ec5da0e09497da386e44303abe831 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 729ec5da0e09497da386e44303abe831 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node e00f5af525bd4b2d899fb9a773da87c4, the generated node is 729ec5da0e09497da386e44303abe831, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 729ec5da0e09497da386e44303abe831",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 477, current node.id is 729ec5da0e09497da386e44303abe831",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=479,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (476, 478)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 481/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 479, current node.id is 013f809980d548d8b888c7215450ab8a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 729ec5da0e09497da386e44303abe831",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 729ec5da0e09497da386e44303abe831",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 729ec5da0e09497da386e44303abe831.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 729ec5da0e09497da386e44303abe831 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=479,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (476, 478)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 481/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 013f809980d548d8b888c7215450ab8a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 013f809980d548d8b888c7215450ab8a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 013f809980d548d8b888c7215450ab8a.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 013f809980d548d8b888c7215450ab8a expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 729ec5da0e09497da386e44303abe831 to create new node 205190e30ef84bd1a8da7a83400155fe",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 205190e30ef84bd1a8da7a83400155fe",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 205190e30ef84bd1a8da7a83400155fe is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 205190e30ef84bd1a8da7a83400155fe is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 205190e30ef84bd1a8da7a83400155fe is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 729ec5da0e09497da386e44303abe831, the generated node is 205190e30ef84bd1a8da7a83400155fe, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 205190e30ef84bd1a8da7a83400155fe",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 479, current node.id is 205190e30ef84bd1a8da7a83400155fe",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=480,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (476, 478), (478, 479)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 482/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 205190e30ef84bd1a8da7a83400155fe",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 205190e30ef84bd1a8da7a83400155fe",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 205190e30ef84bd1a8da7a83400155fe.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 205190e30ef84bd1a8da7a83400155fe expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node a00ed717404d4a27be17f8a913580962 to create new node 19f6e62294414419b9cbac5408474f94",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 013f809980d548d8b888c7215450ab8a to create new node 021066f156314bd093bba71e4455f643",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 021066f156314bd093bba71e4455f643",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 021066f156314bd093bba71e4455f643 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 021066f156314bd093bba71e4455f643 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 021066f156314bd093bba71e4455f643 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 013f809980d548d8b888c7215450ab8a, the generated node is 021066f156314bd093bba71e4455f643, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 021066f156314bd093bba71e4455f643",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 19f6e62294414419b9cbac5408474f94",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 19f6e62294414419b9cbac5408474f94 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 19f6e62294414419b9cbac5408474f94 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 19f6e62294414419b9cbac5408474f94 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node a00ed717404d4a27be17f8a913580962, the generated node is 19f6e62294414419b9cbac5408474f94, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 19f6e62294414419b9cbac5408474f94",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 480, current node.id is 19f6e62294414419b9cbac5408474f94",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 205190e30ef84bd1a8da7a83400155fe to create new node b3c53c2af89440d9b56c7434069c859d",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=482,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 484/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 482, current node.id is 021066f156314bd093bba71e4455f643",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 19f6e62294414419b9cbac5408474f94",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 19f6e62294414419b9cbac5408474f94",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 19f6e62294414419b9cbac5408474f94.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 19f6e62294414419b9cbac5408474f94 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=482,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 484/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 021066f156314bd093bba71e4455f643",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 021066f156314bd093bba71e4455f643",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 021066f156314bd093bba71e4455f643.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 021066f156314bd093bba71e4455f643 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node b3c53c2af89440d9b56c7434069c859d",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node b3c53c2af89440d9b56c7434069c859d is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node b3c53c2af89440d9b56c7434069c859d is 0.0662.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Successfully Debug the error in node 205190e30ef84bd1a8da7a83400155fe.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 304cc1c110eb4c3e9d0870c14489df74, Node b3c53c2af89440d9b56c7434069c859d metric improvement (-0.0006999999999999923) below threshold (0.0001), try one more time(3/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node b3c53c2af89440d9b56c7434069c859d start backpropagating with reward 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ce4198693b4f81a7e5fe23c9caeed6 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 205190e30ef84bd1a8da7a83400155fe, the generated node is b3c53c2af89440d9b56c7434069c859d, the metric is 0.0662",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node b3c53c2af89440d9b56c7434069c859d is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 482, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=483,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 485/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 2/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 0.5*(math.log(110) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 0.5*(math.log(110) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 92ce4198693b4f81a7e5fe23c9caeed6 uct = 27.0/37 + 0.5*(math.log(110) / 37) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ce4198693b4f81a7e5fe23c9caeed6 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8ec237a1fa55423bbbedf7c5c7cb6957 uct = 27.0/37 + 0.5*(math.log(37) / 37) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 71d595830bc94110bf8e2fbd3a3bba8e uct = 27.0/37 + 0.5*(math.log(37) / 37) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2682905515a24bf9b5aeb9186d49588b uct = 27.0/37 + 0.5*(math.log(37) / 37) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node dc76c9d762a144a38b942a56579c72f1 uct = 6.0/10 + 0.5*(math.log(37) / 10) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 4d1f15191ac1424a80cea6a8f3012b1f uct = 21.0/25 + 0.5*(math.log(37) / 25) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 479efbd9b3f54a2c92f5031bc436ecf7 uct = -1.0/1 + 0.5*(math.log(37) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 70a9f277823e40ea970f5d54c7d5ccbf uct = 11.0/11 + 0.5*(math.log(25) / 11) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 68e2d192b3ef47c99a704cd63655f522 uct = 5.0/7 + 0.5*(math.log(25) / 7) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node fdb5293f800f48359d1c9fa81bc1cddb uct = 5.0/7 + 0.5*(math.log(25) / 7) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9f3a406c6f5644cb91fbcf0bbbf6fdcc uct = 4.0/4 + 0.5*(math.log(11) / 4) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 3b2e00e9c77e43d0be1f980c6e784bf3 uct = 4.0/4 + 0.5*(math.log(11) / 4) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5067ba5710eb4bd282abcd5109897eb8 uct = 3.0/3 + 0.5*(math.log(11) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5067ba5710eb4bd282abcd5109897eb8 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 5067ba5710eb4bd282abcd5109897eb8",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 5067ba5710eb4bd282abcd5109897eb8.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 5067ba5710eb4bd282abcd5109897eb8 expected_child_count is 2.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 021066f156314bd093bba71e4455f643 to create new node bd97a1a1608145f7958bf43c647fa561",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node bd97a1a1608145f7958bf43c647fa561",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node bd97a1a1608145f7958bf43c647fa561 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node bd97a1a1608145f7958bf43c647fa561 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node bd97a1a1608145f7958bf43c647fa561 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 021066f156314bd093bba71e4455f643, the generated node is bd97a1a1608145f7958bf43c647fa561, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main bd97a1a1608145f7958bf43c647fa561",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 19f6e62294414419b9cbac5408474f94 to create new node 2fa2722822db4f30907f53c5d114bcdd",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 2fa2722822db4f30907f53c5d114bcdd",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 2fa2722822db4f30907f53c5d114bcdd is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 2fa2722822db4f30907f53c5d114bcdd is 0.2116.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Successfully Debug the error in node 19f6e62294414419b9cbac5408474f94.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 90516d22e1974c728bab106e14aa234c, Node 2fa2722822db4f30907f53c5d114bcdd metric improvement (-0.15180000000000002) below threshold (0.0001), try one more time(3/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 2fa2722822db4f30907f53c5d114bcdd start backpropagating with reward 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 19f6e62294414419b9cbac5408474f94, the generated node is 2fa2722822db4f30907f53c5d114bcdd, the metric is 0.2116",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2fa2722822db4f30907f53c5d114bcdd is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 483, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=485,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 487/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 485, current node.id is bd97a1a1608145f7958bf43c647fa561",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 2/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 4ce384e386cb43e686de1b926b24bb10 uct = 29.0/41 + 0.5*(math.log(111) / 41) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 0.5*(math.log(111) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 0.5*(math.log(111) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node ab69450171364e04af260715abbfeb4d uct = 29.0/41 + 0.5*(math.log(41) / 41) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8957144e87db492288f62b74fb4df3a8 uct = 29.0/41 + 0.5*(math.log(41) / 41) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d079a831e4fa4091bdbc219e653c3687 uct = 29.0/41 + 0.5*(math.log(41) / 41) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5202ca88025a4edea928d42ef8b297ff uct = 30.0/40 + 0.5*(math.log(41) / 40) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8129090cc0504341971c8bfc57285639 uct = 13.0/17 + 0.5*(math.log(40) / 17) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 24d36c68d00e4afdb8af4275b3226d88 uct = 9.0/13 + 0.5*(math.log(40) / 13) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0243f2d6f981436f9d30439cd72f3ace uct = 7.0/9 + 0.5*(math.log(40) / 9) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2e1442a24ea945ffb4f5436fa38bd066 uct = 7.0/9 + 0.5*(math.log(9) / 9) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9315de56150745548d77399b670ec829 uct = 5.0/5 + 0.5*(math.log(9) / 5) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node ddedd1c499fb4787807d10a46b2f2989 uct = -1.0/1 + 0.5*(math.log(9) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node f5c44cd9643945fabc7ac527a67ed137 uct = 2.0/2 + 0.5*(math.log(9) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c3bc734859584a439badfb7c620d172f uct = 2.0/2 + 0.5*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 850bd8146d7548ad87bd83deba26ebde uct = 2.0/2 + 0.5*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 90516d22e1974c728bab106e14aa234c uct = 1.0/1 + 0.5*(math.log(2) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node bdce58dc22254cf6a4c43197de24f23c uct = 1.0/1 + 0.5*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0b70259cdfdb46cc93215f72c89bc9ae uct = 1.0/1 + 0.5*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a00ed717404d4a27be17f8a913580962 uct = 1.0/1 + 0.5*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 19f6e62294414419b9cbac5408474f94 uct = 1.0/1 + 0.5*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2fa2722822db4f30907f53c5d114bcdd uct = 1.0/1 + 0.5*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2fa2722822db4f30907f53c5d114bcdd is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 2fa2722822db4f30907f53c5d114bcdd",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 2fa2722822db4f30907f53c5d114bcdd.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 2fa2722822db4f30907f53c5d114bcdd expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=485,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 487/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: bd97a1a1608145f7958bf43c647fa561",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: bd97a1a1608145f7958bf43c647fa561",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node bd97a1a1608145f7958bf43c647fa561.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current bd97a1a1608145f7958bf43c647fa561 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node bd97a1a1608145f7958bf43c647fa561 to create new node 9bb043dddb5d471eadb9cc808f6bcde1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 9bb043dddb5d471eadb9cc808f6bcde1",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 9bb043dddb5d471eadb9cc808f6bcde1 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 9bb043dddb5d471eadb9cc808f6bcde1 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 9bb043dddb5d471eadb9cc808f6bcde1 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 9bb043dddb5d471eadb9cc808f6bcde1 start backpropagating with reward -1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ea16803dc14d9bac86d91f4ca4f614 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node bd97a1a1608145f7958bf43c647fa561, the generated node is 9bb043dddb5d471eadb9cc808f6bcde1, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 2fa2722822db4f30907f53c5d114bcdd to create new node 2a950477d9c24e9082f5aeb48cd32b32",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 2a950477d9c24e9082f5aeb48cd32b32",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 2a950477d9c24e9082f5aeb48cd32b32 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 2a950477d9c24e9082f5aeb48cd32b32 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 2a950477d9c24e9082f5aeb48cd32b32 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 2fa2722822db4f30907f53c5d114bcdd, the generated node is 2a950477d9c24e9082f5aeb48cd32b32, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 2a950477d9c24e9082f5aeb48cd32b32",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 485, current node.id is 2a950477d9c24e9082f5aeb48cd32b32",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=487,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 489/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 2a950477d9c24e9082f5aeb48cd32b32",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 2a950477d9c24e9082f5aeb48cd32b32",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 2a950477d9c24e9082f5aeb48cd32b32.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 2a950477d9c24e9082f5aeb48cd32b32 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 5067ba5710eb4bd282abcd5109897eb8 to create new node c85a19fa93924ad4b6f83c3577cffe0b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node c85a19fa93924ad4b6f83c3577cffe0b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node c85a19fa93924ad4b6f83c3577cffe0b is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node c85a19fa93924ad4b6f83c3577cffe0b is 0.0742.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Compared to Node 70a9f277823e40ea970f5d54c7d5ccbf, Node c85a19fa93924ad4b6f83c3577cffe0b metric improvement (0.0022999999999999965) above threshold (0.0001), continue improving.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 5067ba5710eb4bd282abcd5109897eb8, the generated node is c85a19fa93924ad4b6f83c3577cffe0b, the metric is 0.0742",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c85a19fa93924ad4b6f83c3577cffe0b is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main c85a19fa93924ad4b6f83c3577cffe0b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 487, current node.id is c85a19fa93924ad4b6f83c3577cffe0b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=488,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 490/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 488, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: c85a19fa93924ad4b6f83c3577cffe0b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: c85a19fa93924ad4b6f83c3577cffe0b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node c85a19fa93924ad4b6f83c3577cffe0b.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current c85a19fa93924ad4b6f83c3577cffe0b expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=488,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 490/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 2/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 0.5*(math.log(112) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 0.5*(math.log(112) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 92ea16803dc14d9bac86d91f4ca4f614 uct = 8.0/32 + 0.5*(math.log(112) / 32) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ea16803dc14d9bac86d91f4ca4f614 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 7514f55e13b5427990651918b527bf88 uct = 8.0/32 + 0.5*(math.log(32) / 32) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 uct = 8.0/32 + 0.5*(math.log(32) / 32) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a82d27faf2a8456db20d0dc1b0adfb6b uct = -1.0/3 + 0.5*(math.log(32) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node e53b038673df4b829d568bf83e6b34c2 uct = -1.0/1 + 0.5*(math.log(32) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d695f6afb24841d4811fdffb207e6317 uct = 9.0/27 + 0.5*(math.log(32) / 27) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6fd5d07c609f44d1b6fb1274a247647f uct = 0.0/2 + 0.5*(math.log(27) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0ed856925538426fbca143ecf8ee2d75 uct = 10.0/24 + 0.5*(math.log(27) / 24) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8a1410bb6589434a9abd79ff2614d46d uct = -1.0/1 + 0.5*(math.log(27) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6fd5d07c609f44d1b6fb1274a247647f is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 6fd5d07c609f44d1b6fb1274a247647f",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 6fd5d07c609f44d1b6fb1274a247647f.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 6fd5d07c609f44d1b6fb1274a247647f expected_child_count is 3.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 2a950477d9c24e9082f5aeb48cd32b32 to create new node b4432decf78a4a9b80cf26cfa4299401",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node b4432decf78a4a9b80cf26cfa4299401",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node b4432decf78a4a9b80cf26cfa4299401 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node b4432decf78a4a9b80cf26cfa4299401 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node b4432decf78a4a9b80cf26cfa4299401 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 2a950477d9c24e9082f5aeb48cd32b32, the generated node is b4432decf78a4a9b80cf26cfa4299401, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main b4432decf78a4a9b80cf26cfa4299401",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 488, current node.id is b4432decf78a4a9b80cf26cfa4299401",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=489,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 491/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: b4432decf78a4a9b80cf26cfa4299401",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: b4432decf78a4a9b80cf26cfa4299401",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node b4432decf78a4a9b80cf26cfa4299401.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current b4432decf78a4a9b80cf26cfa4299401 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 6fd5d07c609f44d1b6fb1274a247647f to create new node 612b7afc6510430eb39a68f5204c8eb3",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node c85a19fa93924ad4b6f83c3577cffe0b to create new node 78bec28ce4f04685900be65b6598c76e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 612b7afc6510430eb39a68f5204c8eb3",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 612b7afc6510430eb39a68f5204c8eb3 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 612b7afc6510430eb39a68f5204c8eb3 is 0.0592.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Compared to Node c6ea6b07968a401d9d2e43a1631041d6, Node 612b7afc6510430eb39a68f5204c8eb3 metric improvement (0.001899999999999999) above threshold (0.0001), continue improving.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 6fd5d07c609f44d1b6fb1274a247647f, the generated node is 612b7afc6510430eb39a68f5204c8eb3, the metric is 0.0592",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 612b7afc6510430eb39a68f5204c8eb3 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 612b7afc6510430eb39a68f5204c8eb3",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 78bec28ce4f04685900be65b6598c76e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 78bec28ce4f04685900be65b6598c76e is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 78bec28ce4f04685900be65b6598c76e is 0.0686.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Compared to Node c85a19fa93924ad4b6f83c3577cffe0b, Node 78bec28ce4f04685900be65b6598c76e metric improvement (0.005600000000000008) above threshold (0.0001), continue improving.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node c85a19fa93924ad4b6f83c3577cffe0b, the generated node is 78bec28ce4f04685900be65b6598c76e, the metric is 0.0686",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 78bec28ce4f04685900be65b6598c76e is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 78bec28ce4f04685900be65b6598c76e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 489, current node.id is 78bec28ce4f04685900be65b6598c76e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=491,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 489), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488), (487, 490)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 493/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 491, current node.id is 612b7afc6510430eb39a68f5204c8eb3",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 78bec28ce4f04685900be65b6598c76e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 78bec28ce4f04685900be65b6598c76e",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 78bec28ce4f04685900be65b6598c76e.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 78bec28ce4f04685900be65b6598c76e expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=491,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 489), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488), (487, 490)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 493/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 612b7afc6510430eb39a68f5204c8eb3",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 612b7afc6510430eb39a68f5204c8eb3",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 612b7afc6510430eb39a68f5204c8eb3.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 612b7afc6510430eb39a68f5204c8eb3 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node b4432decf78a4a9b80cf26cfa4299401 to create new node e90556a2813b4aaa9101fd4714224962",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 612b7afc6510430eb39a68f5204c8eb3 to create new node 5d0e437cef7241b6b303ebc2f7b4e242",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 5d0e437cef7241b6b303ebc2f7b4e242",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 5d0e437cef7241b6b303ebc2f7b4e242 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 5d0e437cef7241b6b303ebc2f7b4e242 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 5d0e437cef7241b6b303ebc2f7b4e242 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 612b7afc6510430eb39a68f5204c8eb3, the generated node is 5d0e437cef7241b6b303ebc2f7b4e242, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 5d0e437cef7241b6b303ebc2f7b4e242",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 78bec28ce4f04685900be65b6598c76e to create new node f44fc65d26034e6e89742f7de6023d1b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node e90556a2813b4aaa9101fd4714224962",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node e90556a2813b4aaa9101fd4714224962 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node e90556a2813b4aaa9101fd4714224962 is 1.2946.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Successfully Debug the error in node b4432decf78a4a9b80cf26cfa4299401.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 90516d22e1974c728bab106e14aa234c, Node e90556a2813b4aaa9101fd4714224962 metric improvement (-1.2348) below threshold (0.0001), try one more time(1/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node e90556a2813b4aaa9101fd4714224962 start backpropagating with reward 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node b4432decf78a4a9b80cf26cfa4299401, the generated node is e90556a2813b4aaa9101fd4714224962, the metric is 1.2946",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node e90556a2813b4aaa9101fd4714224962 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 491, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=493,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 489), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488), (487, 490), (488, 492), (489, 491)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 495/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 2/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 4ce384e386cb43e686de1b926b24bb10 uct = 30.0/42 + 0.5*(math.log(113) / 42) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 0.5*(math.log(113) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 0.5*(math.log(113) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node ab69450171364e04af260715abbfeb4d uct = 30.0/42 + 0.5*(math.log(42) / 42) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8957144e87db492288f62b74fb4df3a8 uct = 30.0/42 + 0.5*(math.log(42) / 42) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d079a831e4fa4091bdbc219e653c3687 uct = 30.0/42 + 0.5*(math.log(42) / 42) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5202ca88025a4edea928d42ef8b297ff uct = 31.0/41 + 0.5*(math.log(42) / 41) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8129090cc0504341971c8bfc57285639 uct = 13.0/17 + 0.5*(math.log(41) / 17) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 24d36c68d00e4afdb8af4275b3226d88 uct = 9.0/13 + 0.5*(math.log(41) / 13) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0243f2d6f981436f9d30439cd72f3ace uct = 8.0/10 + 0.5*(math.log(41) / 10) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2e1442a24ea945ffb4f5436fa38bd066 uct = 8.0/10 + 0.5*(math.log(10) / 10) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9315de56150745548d77399b670ec829 uct = 5.0/5 + 0.5*(math.log(10) / 5) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node ddedd1c499fb4787807d10a46b2f2989 uct = -1.0/1 + 0.5*(math.log(10) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node f5c44cd9643945fabc7ac527a67ed137 uct = 3.0/3 + 0.5*(math.log(10) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c3bc734859584a439badfb7c620d172f uct = 3.0/3 + 0.5*(math.log(3) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 850bd8146d7548ad87bd83deba26ebde uct = 3.0/3 + 0.5*(math.log(3) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 90516d22e1974c728bab106e14aa234c uct = 2.0/2 + 0.5*(math.log(3) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node bdce58dc22254cf6a4c43197de24f23c uct = 2.0/2 + 0.5*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0b70259cdfdb46cc93215f72c89bc9ae uct = 2.0/2 + 0.5*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a00ed717404d4a27be17f8a913580962 uct = 2.0/2 + 0.5*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 19f6e62294414419b9cbac5408474f94 uct = 2.0/2 + 0.5*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2fa2722822db4f30907f53c5d114bcdd uct = 2.0/2 + 0.5*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2a950477d9c24e9082f5aeb48cd32b32 uct = 1.0/1 + 0.5*(math.log(2) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node b4432decf78a4a9b80cf26cfa4299401 uct = 1.0/1 + 0.5*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node e90556a2813b4aaa9101fd4714224962 uct = 1.0/1 + 0.5*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node e90556a2813b4aaa9101fd4714224962 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: e90556a2813b4aaa9101fd4714224962",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node e90556a2813b4aaa9101fd4714224962.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current e90556a2813b4aaa9101fd4714224962 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node f44fc65d26034e6e89742f7de6023d1b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node f44fc65d26034e6e89742f7de6023d1b is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node f44fc65d26034e6e89742f7de6023d1b is 0.0822.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 78bec28ce4f04685900be65b6598c76e, Node f44fc65d26034e6e89742f7de6023d1b metric improvement (-0.013600000000000001) below threshold (0.0001), try one more time(1/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 78bec28ce4f04685900be65b6598c76e, the generated node is f44fc65d26034e6e89742f7de6023d1b, the metric is 0.0822",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node f44fc65d26034e6e89742f7de6023d1b is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main f44fc65d26034e6e89742f7de6023d1b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 493, current node.id is f44fc65d26034e6e89742f7de6023d1b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=494,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 489), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488), (487, 490), (488, 492), (489, 491), (490, 493)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 496/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 494, current node.id is 5d0e437cef7241b6b303ebc2f7b4e242",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: f44fc65d26034e6e89742f7de6023d1b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: f44fc65d26034e6e89742f7de6023d1b",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node f44fc65d26034e6e89742f7de6023d1b.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current f44fc65d26034e6e89742f7de6023d1b expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=494,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 489), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488), (487, 490), (488, 492), (489, 491), (490, 493)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 496/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 5d0e437cef7241b6b303ebc2f7b4e242",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 5d0e437cef7241b6b303ebc2f7b4e242",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 5d0e437cef7241b6b303ebc2f7b4e242.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 5d0e437cef7241b6b303ebc2f7b4e242 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node e90556a2813b4aaa9101fd4714224962 to create new node 984dd7a1644f4e1db66a6f66a7380573",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 984dd7a1644f4e1db66a6f66a7380573",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Node 984dd7a1644f4e1db66a6f66a7380573 is marked as buggy because the response['is_bug'] is True.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 984dd7a1644f4e1db66a6f66a7380573 is buggy and/or did not produce a submission.csv",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 984dd7a1644f4e1db66a6f66a7380573 is None.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node e90556a2813b4aaa9101fd4714224962, the generated node is 984dd7a1644f4e1db66a6f66a7380573, the metric is None",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: result node has bug.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 984dd7a1644f4e1db66a6f66a7380573",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 494, current node.id is 984dd7a1644f4e1db66a6f66a7380573",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=495,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 489), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488), (487, 490), (488, 492), (489, 491), (490, 493), (492, 494)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 497/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 984dd7a1644f4e1db66a6f66a7380573",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 984dd7a1644f4e1db66a6f66a7380573",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Debugging Node 984dd7a1644f4e1db66a6f66a7380573.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 984dd7a1644f4e1db66a6f66a7380573 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 5d0e437cef7241b6b303ebc2f7b4e242 to create new node 7bb07b7bde1d49f09ca39a83a989639f",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 7bb07b7bde1d49f09ca39a83a989639f",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 7bb07b7bde1d49f09ca39a83a989639f is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 7bb07b7bde1d49f09ca39a83a989639f is 0.0592.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Successfully Debug the error in node 5d0e437cef7241b6b303ebc2f7b4e242.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 612b7afc6510430eb39a68f5204c8eb3, Node 7bb07b7bde1d49f09ca39a83a989639f metric improvement (0.0) below threshold (0.0001), try one more time(1/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 7bb07b7bde1d49f09ca39a83a989639f start backpropagating with reward 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ea16803dc14d9bac86d91f4ca4f614 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 5d0e437cef7241b6b303ebc2f7b4e242, the generated node is 7bb07b7bde1d49f09ca39a83a989639f, the metric is 0.0592",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 7bb07b7bde1d49f09ca39a83a989639f is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Debugged node 984dd7a1644f4e1db66a6f66a7380573 to create new node 2b5d6012f9b24bbb9c582c183c9641a6",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node f44fc65d26034e6e89742f7de6023d1b to create new node 09a5310310de4ac6b29e64c56a19cc39",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是1",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:1使用的cpu为{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 2b5d6012f9b24bbb9c582c183c9641a6",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 2b5d6012f9b24bbb9c582c183c9641a6 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 2b5d6012f9b24bbb9c582c183c9641a6 is 0.0697.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Successfully Debug the error in node 984dd7a1644f4e1db66a6f66a7380573.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 90516d22e1974c728bab106e14aa234c, Node 2b5d6012f9b24bbb9c582c183c9641a6 metric improvement (-0.009899999999999999) below threshold (0.0001), try one more time(1/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: node 2b5d6012f9b24bbb9c582c183c9641a6 start backpropagating with reward 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is unlocked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 984dd7a1644f4e1db66a6f66a7380573, the generated node is 2b5d6012f9b24bbb9c582c183c9641a6, the metric is 0.0697",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2b5d6012f9b24bbb9c582c183c9641a6 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return root to main",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 09a5310310de4ac6b29e64c56a19cc39",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 09a5310310de4ac6b29e64c56a19cc39 is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 09a5310310de4ac6b29e64c56a19cc39 is 0.1143.",
            "delay": 200
        },
        {
            "text": "<span class='warning'>[WARNING]</span>: Compared to Node 78bec28ce4f04685900be65b6598c76e, Node 09a5310310de4ac6b29e64c56a19cc39 metric improvement (-0.045700000000000005) below threshold (0.0001), try one more time(2/3)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node f44fc65d26034e6e89742f7de6023d1b, the generated node is 09a5310310de4ac6b29e64c56a19cc39, the metric is 0.1143",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 09a5310310de4ac6b29e64c56a19cc39 is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 09a5310310de4ac6b29e64c56a19cc39",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 495, current node.id is 09a5310310de4ac6b29e64c56a19cc39",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=498,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 489), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488), (487, 490), (488, 492), (489, 491), (490, 493), (491, 495), (492, 494), (493, 497), (494, 496)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 498, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=498,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 489), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488), (487, 490), (488, 492), (489, 491), (490, 493), (491, 495), (492, 494), (493, 497), (494, 496)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 499/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 498, current node.id is 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 1/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 4ce384e386cb43e686de1b926b24bb10 uct = 31.0/43 + 0.5*(math.log(115) / 43) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 0.5*(math.log(115) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 0.5*(math.log(115) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 92ea16803dc14d9bac86d91f4ca4f614 uct = 9.0/33 + 0.5*(math.log(115) / 33) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 4ce384e386cb43e686de1b926b24bb10 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node ab69450171364e04af260715abbfeb4d uct = 31.0/43 + 0.5*(math.log(43) / 43) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8957144e87db492288f62b74fb4df3a8 uct = 31.0/43 + 0.5*(math.log(43) / 43) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d079a831e4fa4091bdbc219e653c3687 uct = 31.0/43 + 0.5*(math.log(43) / 43) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 5202ca88025a4edea928d42ef8b297ff uct = 32.0/42 + 0.5*(math.log(43) / 42) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8129090cc0504341971c8bfc57285639 uct = 13.0/17 + 0.5*(math.log(42) / 17) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 24d36c68d00e4afdb8af4275b3226d88 uct = 9.0/13 + 0.5*(math.log(42) / 13) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0243f2d6f981436f9d30439cd72f3ace uct = 9.0/11 + 0.5*(math.log(42) / 11) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2e1442a24ea945ffb4f5436fa38bd066 uct = 9.0/11 + 0.5*(math.log(11) / 11) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9315de56150745548d77399b670ec829 uct = 5.0/5 + 0.5*(math.log(11) / 5) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node ddedd1c499fb4787807d10a46b2f2989 uct = -1.0/1 + 0.5*(math.log(11) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node f5c44cd9643945fabc7ac527a67ed137 uct = 4.0/4 + 0.5*(math.log(11) / 4) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c3bc734859584a439badfb7c620d172f uct = 4.0/4 + 0.5*(math.log(4) / 4) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 850bd8146d7548ad87bd83deba26ebde uct = 4.0/4 + 0.5*(math.log(4) / 4) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 90516d22e1974c728bab106e14aa234c uct = 3.0/3 + 0.5*(math.log(4) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node bdce58dc22254cf6a4c43197de24f23c uct = 3.0/3 + 0.5*(math.log(3) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0b70259cdfdb46cc93215f72c89bc9ae uct = 3.0/3 + 0.5*(math.log(3) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a00ed717404d4a27be17f8a913580962 uct = 3.0/3 + 0.5*(math.log(3) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 19f6e62294414419b9cbac5408474f94 uct = 3.0/3 + 0.5*(math.log(3) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2fa2722822db4f30907f53c5d114bcdd uct = 3.0/3 + 0.5*(math.log(3) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2a950477d9c24e9082f5aeb48cd32b32 uct = 2.0/2 + 0.5*(math.log(3) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node b4432decf78a4a9b80cf26cfa4299401 uct = 2.0/2 + 0.5*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node e90556a2813b4aaa9101fd4714224962 uct = 2.0/2 + 0.5*(math.log(2) / 2) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 984dd7a1644f4e1db66a6f66a7380573 uct = 1.0/1 + 0.5*(math.log(2) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2b5d6012f9b24bbb9c582c183c9641a6 uct = 1.0/1 + 0.5*(math.log(1) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 2b5d6012f9b24bbb9c582c183c9641a6 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 2b5d6012f9b24bbb9c582c183c9641a6",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 2b5d6012f9b24bbb9c582c183c9641a6.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 2b5d6012f9b24bbb9c582c183c9641a6 expected_child_count is 1.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=498,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 489), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488), (487, 490), (488, 492), (489, 491), (490, 493), (491, 495), (492, 494), (493, 497), (494, 496)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Adding new step. Current steps is 499/500",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [step_task] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [select] Processing node: 978f07f05e5b4e9989cc2fb704194787",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: For node 978f07f05e5b4e9989cc2fb704194787, there are 2/5 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a7af7611cba548f68c4b859e9b02ed8c uct = -1.0/1 + 0.5*(math.log(115) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6b9d36c24c0a46ceb97fb306da887228 uct = -1.0/1 + 0.5*(math.log(115) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 92ea16803dc14d9bac86d91f4ca4f614 uct = 9.0/33 + 0.5*(math.log(115) / 33) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Draft node 92ea16803dc14d9bac86d91f4ca4f614 is locked.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 7514f55e13b5427990651918b527bf88 uct = 9.0/33 + 0.5*(math.log(33) / 33) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node c6ea6b07968a401d9d2e43a1631041d6 uct = 9.0/33 + 0.5*(math.log(33) / 33) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node a82d27faf2a8456db20d0dc1b0adfb6b uct = -1.0/3 + 0.5*(math.log(33) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node e53b038673df4b829d568bf83e6b34c2 uct = -1.0/1 + 0.5*(math.log(33) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d695f6afb24841d4811fdffb207e6317 uct = 10.0/28 + 0.5*(math.log(33) / 28) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 6fd5d07c609f44d1b6fb1274a247647f uct = 1.0/3 + 0.5*(math.log(28) / 3) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 0ed856925538426fbca143ecf8ee2d75 uct = 10.0/24 + 0.5*(math.log(28) / 24) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 8a1410bb6589434a9abd79ff2614d46d uct = -1.0/1 + 0.5*(math.log(28) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 15fa67e2f4e7410c8f598827ecdcb321 uct = 1.0/1 + 0.5*(math.log(3) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 612b7afc6510430eb39a68f5204c8eb3 uct = 1.0/1 + 0.5*(math.log(3) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current decay type is piecewise.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 90ae424e87704e1693e1e74cf3a161fa uct = -1.0/1 + 0.5*(math.log(3) / 1) ** 0.5",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 15fa67e2f4e7410c8f598827ecdcb321 is not fully expanded, expanding",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: [_step_search] Processing node: 15fa67e2f4e7410c8f598827ecdcb321",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is generating code, parent node type: <class 'search.mcts_node.MCTSNode'>",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Starting Improving Node 15fa67e2f4e7410c8f598827ecdcb321.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: fetch_child_memory",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current 15fa67e2f4e7410c8f598827ecdcb321 expected_child_count is 2.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: using deepseek-r1 to generate code.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 2b5d6012f9b24bbb9c582c183c9641a6 to create new node d74227a1bd96408580f26c4ac2f5750c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node d74227a1bd96408580f26c4ac2f5750c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node d74227a1bd96408580f26c4ac2f5750c is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node d74227a1bd96408580f26c4ac2f5750c is 0.0585.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Compared to Node 90516d22e1974c728bab106e14aa234c, Node d74227a1bd96408580f26c4ac2f5750c metric improvement (0.0012999999999999956) above threshold (0.0001), continue improving.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 2b5d6012f9b24bbb9c582c183c9641a6, the generated node is d74227a1bd96408580f26c4ac2f5750c, the metric is 0.0585",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node d74227a1bd96408580f26c4ac2f5750c is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main d74227a1bd96408580f26c4ac2f5750c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 498, current node.id is d74227a1bd96408580f26c4ac2f5750c",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=499,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 489), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488), (487, 490), (488, 492), (489, 491), (490, 493), (491, 495), (492, 494), (493, 497), (494, 496), (496, 498)]",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Improved node 15fa67e2f4e7410c8f598827ecdcb321 to create new node 7b21dd72d7404c8980f7039cd6eed88a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: REPL is executing code (reset_session=True)",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Current running process: 0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已分配，process_id是0",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: 已设置process_id:0使用的cpu为{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Agent is parsing execution results for node 7b21dd72d7404c8980f7039cd6eed88a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Parsed results: Node 7b21dd72d7404c8980f7039cd6eed88a is not buggy",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: The metric value of node 7b21dd72d7404c8980f7039cd6eed88a is 0.0592.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Compared to Node c6ea6b07968a401d9d2e43a1631041d6, Node 7b21dd72d7404c8980f7039cd6eed88a metric improvement (0.001899999999999999) above threshold (0.0001), continue improving.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: In the search step from node 15fa67e2f4e7410c8f598827ecdcb321, the generated node is 7b21dd72d7404c8980f7039cd6eed88a, the metric is 0.0592",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 7b21dd72d7404c8980f7039cd6eed88a is not the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Node 9c6c380ca3ec44fa9a4ea43cadc10cd1 is still the best node",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: Best Node metric value is 0.0422.",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: agent return to main 7b21dd72d7404c8980f7039cd6eed88a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: current node count is 499, current node.id is 7b21dd72d7404c8980f7039cd6eed88a",
            "delay": 200
        },
        {
            "text": "<span class='info'>[INFO]</span>: generating layer = Graph, paramaters: n_nodes=500,edges=[(0, 13), (0, 3), (0, 1), (0, 2), (0, 12), (1, 4), (2, 5), (3, 7), (4, 8), (5, 6), (6, 65), (6, 43), (6, 16), (7, 9), (8, 10), (9, 11), (12, 17), (13, 14), (14, 15), (15, 18), (16, 19), (16, 85), (16, 121), (17, 20), (18, 21), (19, 23), (19, 489), (19, 104), (20, 22), (21, 101), (21, 119), (21, 25), (22, 24), (22, 126), (22, 107), (23, 26), (23, 499), (24, 27), (24, 202), (24, 226), (25, 28), (26, 29), (27, 31), (28, 30), (28, 262), (28, 459), (29, 32), (30, 33), (31, 35), (32, 34), (33, 36), (34, 37), (35, 38), (36, 39), (37, 40), (38, 41), (39, 42), (41, 44), (42, 45), (43, 47), (44, 46), (45, 50), (46, 48), (47, 49), (48, 51), (49, 53), (50, 52), (51, 56), (52, 55), (53, 54), (54, 57), (55, 59), (56, 60), (57, 58), (58, 61), (59, 64), (60, 62), (62, 63), (63, 67), (64, 68), (65, 66), (66, 142), (66, 70), (67, 71), (68, 69), (69, 74), (70, 72), (71, 73), (72, 78), (73, 75), (74, 76), (75, 77), (76, 79), (77, 81), (78, 82), (79, 80), (80, 83), (81, 84), (83, 87), (84, 86), (85, 186), (85, 89), (85, 212), (86, 88), (87, 91), (88, 90), (89, 94), (89, 295), (89, 238), (90, 92), (91, 93), (92, 98), (93, 95), (94, 96), (94, 333), (94, 477), (96, 97), (97, 99), (98, 100), (99, 152), (100, 103), (101, 102), (101, 137), (101, 219), (102, 313), (102, 105), (102, 159), (104, 106), (105, 193), (105, 108), (106, 109), (107, 112), (108, 111), (109, 110), (110, 113), (111, 114), (112, 116), (113, 118), (114, 115), (116, 117), (117, 120), (119, 146), (119, 168), (119, 122), (120, 124), (121, 125), (122, 230), (122, 123), (123, 128), (123, 357), (125, 127), (126, 239), (126, 131), (126, 298), (127, 130), (128, 129), (129, 133), (130, 132), (131, 134), (132, 135), (134, 136), (135, 139), (136, 140), (137, 138), (138, 143), (140, 141), (141, 145), (142, 144), (143, 406), (143, 175), (143, 448), (144, 148), (145, 147), (146, 149), (146, 181), (147, 151), (148, 150), (149, 154), (149, 247), (151, 153), (152, 155), (153, 156), (154, 157), (154, 373), (155, 158), (156, 160), (158, 162), (159, 163), (160, 161), (161, 164), (162, 166), (163, 167), (164, 165), (165, 170), (166, 169), (168, 172), (169, 173), (170, 171), (171, 174), (172, 211), (173, 177), (174, 179), (175, 176), (176, 178), (177, 182), (178, 277), (179, 180), (180, 185), (181, 183), (182, 184), (183, 187), (185, 188), (186, 189), (187, 190), (188, 191), (189, 194), (190, 323), (191, 192), (192, 195), (193, 196), (194, 197), (195, 198), (196, 199), (197, 200), (199, 203), (200, 201), (201, 205), (202, 204), (203, 206), (204, 207), (205, 208), (206, 210), (207, 209), (209, 216), (211, 214), (212, 213), (213, 215), (214, 286), (215, 217), (216, 220), (217, 218), (218, 221), (219, 400), (219, 224), (220, 222), (221, 227), (222, 223), (224, 225), (225, 235), (226, 229), (227, 228), (228, 231), (229, 233), (230, 232), (231, 234), (232, 302), (233, 236), (235, 237), (237, 241), (238, 356), (238, 388), (238, 240), (239, 435), (239, 242), (239, 346), (240, 243), (241, 244), (242, 246), (243, 248), (244, 245), (245, 289), (246, 250), (247, 249), (248, 251), (249, 253), (250, 254), (251, 252), (252, 256), (253, 255), (254, 257), (255, 259), (256, 260), (257, 258), (258, 261), (260, 263), (261, 264), (262, 265), (263, 266), (264, 269), (265, 267), (266, 268), (267, 270), (268, 271), (269, 272), (270, 273), (271, 275), (272, 274), (274, 278), (275, 276), (276, 279), (277, 280), (278, 281), (279, 283), (280, 284), (281, 282), (282, 285), (283, 287), (284, 385), (285, 290), (286, 288), (287, 291), (288, 343), (289, 294), (290, 292), (292, 293), (294, 296), (295, 322), (295, 297), (295, 344), (296, 299), (297, 300), (297, 444), (298, 304), (300, 301), (301, 303), (302, 306), (303, 305), (304, 307), (304, 403), (305, 308), (306, 310), (307, 309), (308, 311), (309, 312), (311, 317), (312, 314), (313, 315), (314, 319), (315, 316), (316, 318), (318, 320), (319, 321), (321, 325), (322, 376), (322, 324), (323, 327), (324, 326), (325, 329), (326, 328), (327, 332), (328, 330), (329, 331), (331, 335), (332, 334), (333, 339), (334, 337), (335, 336), (336, 338), (338, 340), (339, 341), (340, 342), (341, 368), (342, 358), (343, 347), (344, 345), (345, 348), (346, 350), (346, 487), (347, 349), (348, 353), (349, 351), (350, 354), (351, 352), (353, 416), (354, 355), (355, 382), (356, 359), (357, 360), (358, 362), (359, 363), (360, 361), (361, 365), (362, 364), (363, 366), (364, 369), (365, 367), (367, 370), (368, 371), (369, 372), (371, 375), (372, 377), (373, 374), (374, 378), (375, 402), (376, 379), (377, 380), (378, 383), (379, 381), (381, 384), (382, 386), (384, 433), (385, 387), (386, 389), (387, 392), (388, 390), (389, 391), (390, 393), (391, 394), (392, 395), (393, 396), (394, 397), (396, 398), (397, 399), (399, 410), (400, 401), (401, 411), (402, 405), (403, 404), (404, 407), (405, 408), (406, 409), (407, 425), (408, 412), (409, 420), (410, 415), (411, 413), (413, 414), (414, 417), (415, 418), (416, 419), (417, 434), (418, 422), (419, 421), (420, 424), (421, 423), (423, 426), (424, 427), (425, 428), (426, 429), (427, 430), (428, 431), (429, 465), (431, 432), (433, 436), (434, 437), (435, 438), (436, 439), (437, 442), (438, 441), (439, 440), (441, 445), (442, 443), (444, 447), (445, 446), (446, 451), (447, 450), (448, 449), (449, 452), (450, 453), (451, 454), (452, 456), (453, 455), (454, 457), (455, 458), (457, 461), (458, 462), (459, 460), (460, 463), (461, 464), (463, 466), (464, 467), (465, 468), (466, 469), (467, 470), (468, 473), (469, 471), (470, 472), (471, 475), (472, 476), (473, 474), (475, 481), (476, 478), (477, 480), (478, 479), (479, 482), (480, 483), (481, 484), (483, 485), (484, 486), (486, 488), (487, 490), (488, 492), (489, 491), (490, 493), (491, 495), (492, 494), (493, 497), (494, 496), (496, 498)]",
            "delay": 200
        },
        {
            "text": "<span class='prompt'>ml-master@ai4ai:~$</span> ",
            "delay": 200
        }
    ],
    "code": "<span class=\"keyword\">import</span> os\n<span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np\n<span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd\n<span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split\n<span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler\n<span class=\"keyword\">from</span> sklearn.compose <span class=\"keyword\">import</span> ColumnTransformer\n<span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error\n<span class=\"keyword\">import</span> lightgbm <span class=\"keyword\">as</span> lgb\n<span class=\"keyword\">import</span> optuna\n\n\n<span class=\"keyword\">def</span> <span class=\"function\">process_geometry</span>(id, is_train):\n    path = <span class=\"string\">f</span><span class=\"string\">&quot;</span><span class=\"string\">./input/</span><span class=\"string\">{</span><span class=\"string\">&#x27;</span><span class=\"string\">train</span><span class=\"string\">&#x27;</span> <span class=\"keyword\">if</span> is_train <span class=\"keyword\">else</span> <span class=\"string\">&#x27;</span><span class=\"string\">test</span><span class=\"string\">&#x27;</span><span class=\"string\">}</span><span class=\"string\">/</span><span class=\"string\">{</span>id<span class=\"string\">}</span><span class=\"string\">/geometry.xyz</span><span class=\"string\">&quot;</span>\n    features = {}\n    elements = [<span class=\"string\">&quot;</span><span class=\"string\">Al</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">Ga</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">In</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">O</span><span class=\"string\">&quot;</span>]\n    cutoff = <span class=\"number\">3.0</span>\n\n    <span class=\"keyword\">try</span>:\n        <span class=\"keyword\">with</span> open(path, <span class=\"string\">&quot;</span><span class=\"string\">r</span><span class=\"string\">&quot;</span>) <span class=\"keyword\">as</span> f:\n            lines = f.readlines()\n        df = pd.DataFrame(\n            [line.split()[:<span class=\"number\">4</span>] <span class=\"keyword\">for</span> line in lines[<span class=\"number\">2</span>:] <span class=\"keyword\">if</span> len(line.split()) &gt;= <span class=\"number\">4</span>],\n            columns=[<span class=\"string\">&quot;</span><span class=\"string\">element</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">x</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">y</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">z</span><span class=\"string\">&quot;</span>],\n        )\n        df[[<span class=\"string\">&quot;</span><span class=\"string\">x</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">y</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">z</span><span class=\"string\">&quot;</span>]] = df[[<span class=\"string\">&quot;</span><span class=\"string\">x</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">y</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">z</span><span class=\"string\">&quot;</span>]].astype(float)\n\n        <span class=\"keyword\">for</span> i in range(len(elements)):\n            <span class=\"keyword\">for</span> j in range(i, len(elements)):\n                elem1, elem2 = elements[i], elements[j]\n                coords1 = df[df[<span class=\"string\">&quot;</span><span class=\"string\">element</span><span class=\"string\">&quot;</span>] == elem1][[<span class=\"string\">&quot;</span><span class=\"string\">x</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">y</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">z</span><span class=\"string\">&quot;</span>]].values\n                coords2 = df[df[<span class=\"string\">&quot;</span><span class=\"string\">element</span><span class=\"string\">&quot;</span>] == elem2][[<span class=\"string\">&quot;</span><span class=\"string\">x</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">y</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">z</span><span class=\"string\">&quot;</span>]].values\n\n                key = <span class=\"string\">f</span><span class=\"string\">&quot;</span><span class=\"string\">{</span>elem1<span class=\"string\">}</span><span class=\"string\">_</span><span class=\"string\">{</span>elem2<span class=\"string\">}</span><span class=\"string\">&quot;</span>\n                stats = {<span class=\"string\">&quot;</span><span class=\"string\">min</span><span class=\"string\">&quot;</span>: <span class=\"number\">0.0</span>, <span class=\"string\">&quot;</span><span class=\"string\">max</span><span class=\"string\">&quot;</span>: <span class=\"number\">0.0</span>, <span class=\"string\">&quot;</span><span class=\"string\">mean</span><span class=\"string\">&quot;</span>: <span class=\"number\">0.0</span>, <span class=\"string\">&quot;</span><span class=\"string\">std</span><span class=\"string\">&quot;</span>: <span class=\"number\">0.0</span>}\n                count = <span class=\"number\">0</span>\n\n                <span class=\"keyword\">if</span> len(coords1) &gt; <span class=\"number\">0</span> and len(coords2) &gt; <span class=\"number\">0</span>:\n                    diff = coords1[:, np.newaxis] - coords2[np.newaxis, :]\n                    distances = np.sqrt((diff**<span class=\"number\">2</span>).sum(axis=<span class=\"number\">2</span>))\n\n                    <span class=\"keyword\">if</span> elem1 == elem2:\n                        n = len(coords1)\n                        <span class=\"keyword\">if</span> n &gt; <span class=\"number\">1</span>:\n                            triu_indices = np.triu_indices(n, k=<span class=\"number\">1</span>)\n                            distances = distances[triu_indices]\n                        <span class=\"keyword\">else</span>:\n                            distances = np.array([])\n\n                    <span class=\"keyword\">if</span> len(distances) &gt; <span class=\"number\">0</span>:\n                        stats = {\n                            <span class=\"string\">&quot;</span><span class=\"string\">min</span><span class=\"string\">&quot;</span>: np.min(distances),\n                            <span class=\"string\">&quot;</span><span class=\"string\">max</span><span class=\"string\">&quot;</span>: np.max(distances),\n                            <span class=\"string\">&quot;</span><span class=\"string\">mean</span><span class=\"string\">&quot;</span>: np.mean(distances),\n                            <span class=\"string\">&quot;</span><span class=\"string\">std</span><span class=\"string\">&quot;</span>: np.std(distances),\n                        }\n                        count = (distances &lt; cutoff).sum()\n\n                <span class=\"keyword\">for</span> stat, val in stats.items():\n                    features[<span class=\"string\">f</span><span class=\"string\">&quot;</span><span class=\"string\">{</span>key<span class=\"string\">}</span><span class=\"string\">_</span><span class=\"string\">{</span>stat<span class=\"string\">}</span><span class=\"string\">_dist</span><span class=\"string\">&quot;</span>] = val\n                features[<span class=\"string\">f</span><span class=\"string\">&quot;</span><span class=\"string\">{</span>key<span class=\"string\">}</span><span class=\"string\">_count_below_</span><span class=\"string\">{</span>cutoff<span class=\"string\">}</span><span class=\"string\">&quot;</span>] = count\n\n    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:\n        print(<span class=\"string\">f</span><span class=\"string\">&quot;</span><span class=\"string\">Error processing </span><span class=\"string\">{</span>path<span class=\"string\">}</span><span class=\"string\">: </span><span class=\"string\">{</span>str(e)<span class=\"string\">}</span><span class=\"string\">&quot;</span>)\n\n    <span class=\"keyword\">return</span> features\n\n\n<span class=\"keyword\">def</span> <span class=\"function\">add_volume</span>(df):\n    a = df[<span class=\"string\">&quot;</span><span class=\"string\">lattice_vector_1_ang</span><span class=\"string\">&quot;</span>]\n    b = df[<span class=\"string\">&quot;</span><span class=\"string\">lattice_vector_2_ang</span><span class=\"string\">&quot;</span>]\n    c = df[<span class=\"string\">&quot;</span><span class=\"string\">lattice_vector_3_ang</span><span class=\"string\">&quot;</span>]\n    alpha = np.radians(df[<span class=\"string\">&quot;</span><span class=\"string\">lattice_angle_alpha_degree</span><span class=\"string\">&quot;</span>])\n    beta = np.radians(df[<span class=\"string\">&quot;</span><span class=\"string\">lattice_angle_beta_degree</span><span class=\"string\">&quot;</span>])\n    gamma = np.radians(df[<span class=\"string\">&quot;</span><span class=\"string\">lattice_angle_gamma_degree</span><span class=\"string\">&quot;</span>])\n\n    vol = (\n        a\n        * b\n        * c\n        * np.sqrt(\n            <span class=\"number\">1</span>\n            + <span class=\"number\">2</span> * np.cos(alpha) * np.cos(beta) * np.cos(gamma)\n            - np.cos(alpha) ** <span class=\"number\">2</span>\n            - np.cos(beta) ** <span class=\"number\">2</span>\n            - np.cos(gamma) ** <span class=\"number\">2</span>\n        )\n    )\n    <span class=\"keyword\">return</span> vol\n\n\n<span class=\"comment\"># Load and process data</span>\ntrain_df = pd.read_csv(<span class=\"string\">&quot;</span><span class=\"string\">./input/train.csv</span><span class=\"string\">&quot;</span>)\ntest_df = pd.read_csv(<span class=\"string\">&quot;</span><span class=\"string\">./input/test.csv</span><span class=\"string\">&quot;</span>)\n\nprint(<span class=\"string\">&quot;</span><span class=\"string\">Processing geometry files...</span><span class=\"string\">&quot;</span>)\ntrain_geom = pd.DataFrame([process_geometry(id, <span class=\"keyword\">True</span>) <span class=\"keyword\">for</span> id in train_df[<span class=\"string\">&quot;</span><span class=\"string\">id</span><span class=\"string\">&quot;</span>]])\ntest_geom = pd.DataFrame([process_geometry(id, <span class=\"keyword\">False</span>) <span class=\"keyword\">for</span> id in test_df[<span class=\"string\">&quot;</span><span class=\"string\">id</span><span class=\"string\">&quot;</span>]])\n\ntrain_df[<span class=\"string\">&quot;</span><span class=\"string\">volume</span><span class=\"string\">&quot;</span>] = add_volume(train_df)\ntest_df[<span class=\"string\">&quot;</span><span class=\"string\">volume</span><span class=\"string\">&quot;</span>] = add_volume(test_df)\n\nfull_train = pd.concat([train_df, train_geom], axis=<span class=\"number\">1</span>).fillna(<span class=\"number\">0</span>)\nfull_test = pd.concat([test_df, test_geom], axis=<span class=\"number\">1</span>).fillna(<span class=\"number\">0</span>)\n\n<span class=\"comment\"># Prepare features</span>\nX = full_train.drop([<span class=\"string\">&quot;</span><span class=\"string\">id</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">formation_energy_ev_natom</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">bandgap_energy_ev</span><span class=\"string\">&quot;</span>], axis=<span class=\"number\">1</span>)\ny_form = np.log1p(full_train[<span class=\"string\">&quot;</span><span class=\"string\">formation_energy_ev_natom</span><span class=\"string\">&quot;</span>])\ny_band = np.log1p(full_train[<span class=\"string\">&quot;</span><span class=\"string\">bandgap_energy_ev</span><span class=\"string\">&quot;</span>])\nX_test = full_test.drop(<span class=\"string\">&quot;</span><span class=\"string\">id</span><span class=\"string\">&quot;</span>, axis=<span class=\"number\">1</span>)\n\npreprocessor = ColumnTransformer(\n    [\n        (<span class=\"string\">&quot;</span><span class=\"string\">num</span><span class=\"string\">&quot;</span>, StandardScaler(), X.columns.difference([<span class=\"string\">&quot;</span><span class=\"string\">spacegroup</span><span class=\"string\">&quot;</span>])),\n        (<span class=\"string\">&quot;</span><span class=\"string\">cat</span><span class=\"string\">&quot;</span>, <span class=\"string\">&quot;</span><span class=\"string\">passthrough</span><span class=\"string\">&quot;</span>, [<span class=\"string\">&quot;</span><span class=\"string\">spacegroup</span><span class=\"string\">&quot;</span>]),\n    ]\n)\n\nX_processed = preprocessor.fit_transform(X)\nX_test_processed = preprocessor.transform(X_test)\ncat_idx = X_processed.shape[<span class=\"number\">1</span>] - <span class=\"number\">1</span>\n\n<span class=\"comment\"># Split data for validation</span>\nX_train, X_val, y_train_form, y_val_form, y_train_band, y_val_band = train_test_split(\n    X_processed, y_form, y_band, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span>\n)\n\n\n<span class=\"keyword\">def</span> <span class=\"function\">objective_form</span>(trial):\n    params = {\n        <span class=\"string\">&quot;</span><span class=\"string\">learning_rate</span><span class=\"string\">&quot;</span>: trial.suggest_float(<span class=\"string\">&quot;</span><span class=\"string\">learning_rate</span><span class=\"string\">&quot;</span>, <span class=\"number\">0.005</span>, <span class=\"number\">0.1</span>, log=<span class=\"keyword\">True</span>),\n        <span class=\"string\">&quot;</span><span class=\"string\">num_leaves</span><span class=\"string\">&quot;</span>: trial.suggest_int(<span class=\"string\">&quot;</span><span class=\"string\">num_leaves</span><span class=\"string\">&quot;</span>, <span class=\"number\">31</span>, <span class=\"number\">511</span>),\n        <span class=\"string\">&quot;</span><span class=\"string\">reg_alpha</span><span class=\"string\">&quot;</span>: trial.suggest_float(<span class=\"string\">&quot;</span><span class=\"string\">reg_alpha</span><span class=\"string\">&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>),\n        <span class=\"string\">&quot;</span><span class=\"string\">reg_lambda</span><span class=\"string\">&quot;</span>: trial.suggest_float(<span class=\"string\">&quot;</span><span class=\"string\">reg_lambda</span><span class=\"string\">&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>),\n        <span class=\"string\">&quot;</span><span class=\"string\">min_child_samples</span><span class=\"string\">&quot;</span>: trial.suggest_int(<span class=\"string\">&quot;</span><span class=\"string\">min_child_samples</span><span class=\"string\">&quot;</span>, <span class=\"number\">5</span>, <span class=\"number\">100</span>),\n        <span class=\"string\">&quot;</span><span class=\"string\">verbosity</span><span class=\"string\">&quot;</span>: -<span class=\"number\">1</span>,\n    }\n    model = lgb.LGBMRegressor(\n        n_estimators=<span class=\"number\">3000</span>,\n        **params,\n        random_state=<span class=\"number\">42</span>,\n        n_jobs=-<span class=\"number\">1</span>,\n        categorical_feature=[cat_idx],\n    )\n    model.fit(\n        X_train,\n        y_train_form,\n        eval_set=[(X_val, y_val_form)],\n        eval_metric=<span class=\"string\">&quot;</span><span class=\"string\">rmse</span><span class=\"string\">&quot;</span>,\n        callbacks=[lgb.early_stopping(<span class=\"number\">100</span>)],\n    )\n    trial.set_user_attr(<span class=\"string\">&quot;</span><span class=\"string\">best_iteration</span><span class=\"string\">&quot;</span>, model.best_iteration_)\n    val_pred = model.predict(X_val)\n    <span class=\"keyword\">return</span> np.sqrt(mean_squared_error(y_val_form, val_pred))\n\n\n<span class=\"keyword\">def</span> <span class=\"function\">objective_band</span>(trial):\n    params = {\n        <span class=\"string\">&quot;</span><span class=\"string\">learning_rate</span><span class=\"string\">&quot;</span>: trial.suggest_float(<span class=\"string\">&quot;</span><span class=\"string\">learning_rate</span><span class=\"string\">&quot;</span>, <span class=\"number\">0.005</span>, <span class=\"number\">0.1</span>, log=<span class=\"keyword\">True</span>),\n        <span class=\"string\">&quot;</span><span class=\"string\">num_leaves</span><span class=\"string\">&quot;</span>: trial.suggest_int(<span class=\"string\">&quot;</span><span class=\"string\">num_leaves</span><span class=\"string\">&quot;</span>, <span class=\"number\">31</span>, <span class=\"number\">511</span>),\n        <span class=\"string\">&quot;</span><span class=\"string\">reg_alpha</span><span class=\"string\">&quot;</span>: trial.suggest_float(<span class=\"string\">&quot;</span><span class=\"string\">reg_alpha</span><span class=\"string\">&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>),\n        <span class=\"string\">&quot;</span><span class=\"string\">reg_lambda</span><span class=\"string\">&quot;</span>: trial.suggest_float(<span class=\"string\">&quot;</span><span class=\"string\">reg_lambda</span><span class=\"string\">&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>),\n        <span class=\"string\">&quot;</span><span class=\"string\">min_child_samples</span><span class=\"string\">&quot;</span>: trial.suggest_int(<span class=\"string\">&quot;</span><span class=\"string\">min_child_samples</span><span class=\"string\">&quot;</span>, <span class=\"number\">5</span>, <span class=\"number\">100</span>),\n        <span class=\"string\">&quot;</span><span class=\"string\">verbosity</span><span class=\"string\">&quot;</span>: -<span class=\"number\">1</span>,\n    }\n    model = lgb.LGBMRegressor(\n        n_estimators=<span class=\"number\">3000</span>,\n        **params,\n        random_state=<span class=\"number\">42</span>,\n        n_jobs=-<span class=\"number\">1</span>,\n        categorical_feature=[cat_idx],\n    )\n    model.fit(\n        X_train,\n        y_train_band,\n        eval_set=[(X_val, y_val_band)],\n        eval_metric=<span class=\"string\">&quot;</span><span class=\"string\">rmse</span><span class=\"string\">&quot;</span>,\n        callbacks=[lgb.early_stopping(<span class=\"number\">100</span>)],\n    )\n    trial.set_user_attr(<span class=\"string\">&quot;</span><span class=\"string\">best_iteration</span><span class=\"string\">&quot;</span>, model.best_iteration_)\n    val_pred = model.predict(X_val)\n    <span class=\"keyword\">return</span> np.sqrt(mean_squared_error(y_val_band, val_pred))\n\n\nprint(<span class=\"string\">&quot;</span><span class=\"string\">Optimizing formation energy model...</span><span class=\"string\">&quot;</span>)\nstudy_form = optuna.create_study(direction=<span class=\"string\">&quot;</span><span class=\"string\">minimize</span><span class=\"string\">&quot;</span>)\nstudy_form.optimize(objective_form, n_trials=<span class=\"number\">5</span>)\n\nprint(<span class=\"string\">&quot;</span><span class=\"string\">Optimizing bandgap model...</span><span class=\"string\">&quot;</span>)\nstudy_band = optuna.create_study(direction=<span class=\"string\">&quot;</span><span class=\"string\">minimize</span><span class=\"string\">&quot;</span>)\nstudy_band.optimize(objective_band, n_trials=<span class=\"number\">5</span>)\n\n<span class=\"comment\"># Retrieve best parameters</span>\nbest_form_params = study_form.best_params\nbest_form_iter = study_form.best_trial.user_attrs[<span class=\"string\">&quot;</span><span class=\"string\">best_iteration</span><span class=\"string\">&quot;</span>]\nbest_band_params = study_band.best_params\nbest_band_iter = study_band.best_trial.user_attrs[<span class=\"string\">&quot;</span><span class=\"string\">best_iteration</span><span class=\"string\">&quot;</span>]\n\n<span class=\"comment\"># Train final models</span>\nmodel_form = lgb.LGBMRegressor(\n    **best_form_params,\n    n_estimators=best_form_iter,\n    random_state=<span class=\"number\">42</span>,\n    n_jobs=-<span class=\"number\">1</span>,\n    categorical_feature=[cat_idx],\n    verbosity=-<span class=\"number\">1</span>,\n)\nmodel_form.fit(X_processed, y_form)\n\nmodel_band = lgb.LGBMRegressor(\n    **best_band_params,\n    n_estimators=best_band_iter,\n    random_state=<span class=\"number\">42</span>,\n    n_jobs=-<span class=\"number\">1</span>,\n    categorical_feature=[cat_idx],\n    verbosity=-<span class=\"number\">1</span>,\n)\nmodel_band.fit(X_processed, y_band)\n\n<span class=\"comment\"># Validation metrics</span>\nval_pred_form = model_form.predict(X_val)\nval_pred_band = model_band.predict(X_val)\nrmsle_form = np.sqrt(mean_squared_error(y_val_form, val_pred_form))\nrmsle_band = np.sqrt(mean_squared_error(y_val_band, val_pred_band))\nprint(<span class=\"string\">f</span><span class=\"string\">&quot;</span><span class=\"string\">Validation RMSLE: </span><span class=\"string\">{</span>(rmsle_form + rmsle_band)/<span class=\"number\">2</span><span class=\"string\">:</span><span class=\"string\">.4f</span><span class=\"string\">}</span><span class=\"string\">&quot;</span>)\n\n<span class=\"comment\"># Generate submission</span>\nsubmission = pd.DataFrame(\n    {\n        <span class=\"string\">&quot;</span><span class=\"string\">id</span><span class=\"string\">&quot;</span>: test_df[<span class=\"string\">&quot;</span><span class=\"string\">id</span><span class=\"string\">&quot;</span>],\n        <span class=\"string\">&quot;</span><span class=\"string\">formation_energy_ev_natom</span><span class=\"string\">&quot;</span>: np.expm1(model_form.predict(X_test_processed)),\n        <span class=\"string\">&quot;</span><span class=\"string\">bandgap_energy_ev</span><span class=\"string\">&quot;</span>: np.expm1(model_band.predict(X_test_processed)),\n    }\n)\nos.makedirs(<span class=\"string\">&quot;</span><span class=\"string\">./submission</span><span class=\"string\">&quot;</span>, exist_ok=<span class=\"keyword\">True</span>)\nsubmission.to_csv(<span class=\"string\">&quot;</span><span class=\"string\">./submission/submission.csv</span><span class=\"string\">&quot;</span>, index=<span class=\"keyword\">False</span>)\n"
}